// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bchrpc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Pb {

  /// <summary>Holder for reflection information generated from bchrpc.proto</summary>
  public static partial class BchrpcReflection {

    #region Descriptor
    /// <summary>File descriptor for bchrpc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BchrpcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxiY2hycGMucHJvdG8SAnBiIhcKFUdldE1lbXBvb2xJbmZvUmVxdWVzdCI1",
            "ChZHZXRNZW1wb29sSW5mb1Jlc3BvbnNlEgwKBHNpemUYASABKA0SDQoFYnl0",
            "ZXMYAiABKA0iLgoRR2V0TWVtcG9vbFJlcXVlc3QSGQoRZnVsbF90cmFuc2Fj",
            "dGlvbnMYASABKAgivQEKEkdldE1lbXBvb2xSZXNwb25zZRJAChB0cmFuc2Fj",
            "dGlvbl9kYXRhGAEgAygLMiYucGIuR2V0TWVtcG9vbFJlc3BvbnNlLlRyYW5z",
            "YWN0aW9uRGF0YRplCg9UcmFuc2FjdGlvbkRhdGESGgoQdHJhbnNhY3Rpb25f",
            "aGFzaBgBIAEoDEgAEiYKC3RyYW5zYWN0aW9uGAIgASgLMg8ucGIuVHJhbnNh",
            "Y3Rpb25IAEIOCgx0eGlkc19vcl90eHMiGgoYR2V0QmxvY2tjaGFpbkluZm9S",
            "ZXF1ZXN0IpkCChlHZXRCbG9ja2NoYWluSW5mb1Jlc3BvbnNlEj0KC2JpdGNv",
            "aW5fbmV0GAEgASgOMigucGIuR2V0QmxvY2tjaGFpbkluZm9SZXNwb25zZS5C",
            "aXRjb2luTmV0EhMKC2Jlc3RfaGVpZ2h0GAIgASgFEhcKD2Jlc3RfYmxvY2tf",
            "aGFzaBgDIAEoDBISCgpkaWZmaWN1bHR5GAQgASgBEhMKC21lZGlhbl90aW1l",
            "GAUgASgDEhAKCHR4X2luZGV4GAYgASgIEhIKCmFkZHJfaW5kZXgYByABKAgi",
            "QAoKQml0Y29pbk5ldBILCgdNQUlOTkVUEAASCwoHUkVHVEVTVBABEgwKCFRF",
            "U1RORVQzEAISCgoGU0lNTkVUEAMiSQoTR2V0QmxvY2tJbmZvUmVxdWVzdBIO",
            "CgRoYXNoGAEgASgMSAASEAoGaGVpZ2h0GAIgASgFSABCEAoOaGFzaF9vcl9o",
            "ZWlnaHQiMwoUR2V0QmxvY2tJbmZvUmVzcG9uc2USGwoEaW5mbxgBIAEoCzIN",
            "LnBiLkJsb2NrSW5mbyJgCg9HZXRCbG9ja1JlcXVlc3QSDgoEaGFzaBgBIAEo",
            "DEgAEhAKBmhlaWdodBgCIAEoBUgAEhkKEWZ1bGxfdHJhbnNhY3Rpb25zGAMg",
            "ASgIQhAKDmhhc2hfb3JfaGVpZ2h0IiwKEEdldEJsb2NrUmVzcG9uc2USGAoF",
            "YmxvY2sYASABKAsyCS5wYi5CbG9jayJIChJHZXRSYXdCbG9ja1JlcXVlc3QS",
            "DgoEaGFzaBgBIAEoDEgAEhAKBmhlaWdodBgCIAEoBUgAQhAKDmhhc2hfb3Jf",
            "aGVpZ2h0IiQKE0dldFJhd0Jsb2NrUmVzcG9uc2USDQoFYmxvY2sYASABKAwi",
            "SwoVR2V0QmxvY2tGaWx0ZXJSZXF1ZXN0Eg4KBGhhc2gYASABKAxIABIQCgZo",
            "ZWlnaHQYAiABKAVIAEIQCg5oYXNoX29yX2hlaWdodCIoChZHZXRCbG9ja0Zp",
            "bHRlclJlc3BvbnNlEg4KBmZpbHRlchgBIAEoDCJEChFHZXRIZWFkZXJzUmVx",
            "dWVzdBIcChRibG9ja19sb2NhdG9yX2hhc2hlcxgBIAMoDBIRCglzdG9wX2hh",
            "c2gYAiABKAwiNAoSR2V0SGVhZGVyc1Jlc3BvbnNlEh4KB2hlYWRlcnMYASAD",
            "KAsyDS5wYi5CbG9ja0luZm8iJQoVR2V0VHJhbnNhY3Rpb25SZXF1ZXN0EgwK",
            "BGhhc2gYASABKAwiPgoWR2V0VHJhbnNhY3Rpb25SZXNwb25zZRIkCgt0cmFu",
            "c2FjdGlvbhgBIAEoCzIPLnBiLlRyYW5zYWN0aW9uIigKGEdldFJhd1RyYW5z",
            "YWN0aW9uUmVxdWVzdBIMCgRoYXNoGAEgASgMIjAKGUdldFJhd1RyYW5zYWN0",
            "aW9uUmVzcG9uc2USEwoLdHJhbnNhY3Rpb24YASABKAwihAEKHUdldEFkZHJl",
            "c3NUcmFuc2FjdGlvbnNSZXF1ZXN0Eg8KB2FkZHJlc3MYASABKAkSDwoHbmJf",
            "c2tpcBgCIAEoDRIQCghuYl9mZXRjaBgDIAEoDRIOCgRoYXNoGAQgASgMSAAS",
            "EAoGaGVpZ2h0GAUgASgFSABCDQoLc3RhcnRfYmxvY2siiwEKHkdldEFkZHJl",
            "c3NUcmFuc2FjdGlvbnNSZXNwb25zZRIvChZjb25maXJtZWRfdHJhbnNhY3Rp",
            "b25zGAEgAygLMg8ucGIuVHJhbnNhY3Rpb24SOAoYdW5jb25maXJtZWRfdHJh",
            "bnNhY3Rpb25zGAIgAygLMhYucGIuTWVtcG9vbFRyYW5zYWN0aW9uIocBCiBH",
            "ZXRSYXdBZGRyZXNzVHJhbnNhY3Rpb25zUmVxdWVzdBIPCgdhZGRyZXNzGAEg",
            "ASgJEg8KB25iX3NraXAYAiABKA0SEAoIbmJfZmV0Y2gYAyABKA0SDgoEaGFz",
            "aBgEIAEoDEgAEhAKBmhlaWdodBgFIAEoBUgAQg0KC3N0YXJ0X2Jsb2NrImUK",
            "IUdldFJhd0FkZHJlc3NUcmFuc2FjdGlvbnNSZXNwb25zZRIeChZjb25maXJt",
            "ZWRfdHJhbnNhY3Rpb25zGAEgAygMEiAKGHVuY29uZmlybWVkX3RyYW5zYWN0",
            "aW9ucxgCIAMoDCJLCh9HZXRBZGRyZXNzVW5zcGVudE91dHB1dHNSZXF1ZXN0",
            "Eg8KB2FkZHJlc3MYASABKAkSFwoPaW5jbHVkZV9tZW1wb29sGAIgASgIIkYK",
            "IEdldEFkZHJlc3NVbnNwZW50T3V0cHV0c1Jlc3BvbnNlEiIKB291dHB1dHMY",
            "ASADKAsyES5wYi5VbnNwZW50T3V0cHV0Ik8KF0dldFVuc3BlbnRPdXRwdXRS",
            "ZXF1ZXN0EgwKBGhhc2gYASABKAwSDQoFaW5kZXgYAiABKA0SFwoPaW5jbHVk",
            "ZV9tZW1wb29sGAMgASgIIp0BChhHZXRVbnNwZW50T3V0cHV0UmVzcG9uc2US",
            "MAoIb3V0cG9pbnQYASABKAsyHi5wYi5UcmFuc2FjdGlvbi5JbnB1dC5PdXRw",
            "b2ludBIVCg1wdWJrZXlfc2NyaXB0GAIgASgMEg0KBXZhbHVlGAMgASgDEhMK",
            "C2lzX2NvaW5iYXNlGAQgASgIEhQKDGJsb2NrX2hlaWdodBgFIAEoBSIxChVH",
            "ZXRNZXJrbGVQcm9vZlJlcXVlc3QSGAoQdHJhbnNhY3Rpb25faGFzaBgBIAEo",
            "DCJVChZHZXRNZXJrbGVQcm9vZlJlc3BvbnNlEhwKBWJsb2NrGAEgASgLMg0u",
            "cGIuQmxvY2tJbmZvEg4KBmhhc2hlcxgCIAMoDBINCgVmbGFncxgDIAEoDCIv",
            "ChhTdWJtaXRUcmFuc2FjdGlvblJlcXVlc3QSEwoLdHJhbnNhY3Rpb24YASAB",
            "KAwiKQoZU3VibWl0VHJhbnNhY3Rpb25SZXNwb25zZRIMCgRoYXNoGAEgASgM",
            "Ir0BChxTdWJzY3JpYmVUcmFuc2FjdGlvbnNSZXF1ZXN0EigKCXN1YnNjcmli",
            "ZRgBIAEoCzIVLnBiLlRyYW5zYWN0aW9uRmlsdGVyEioKC3Vuc3Vic2NyaWJl",
            "GAIgASgLMhUucGIuVHJhbnNhY3Rpb25GaWx0ZXISFwoPaW5jbHVkZV9tZW1w",
            "b29sGAMgASgIEhgKEGluY2x1ZGVfaW5fYmxvY2sYBCABKAgSFAoMc2VyaWFs",
            "aXplX3R4GAUgASgIImAKFlN1YnNjcmliZUJsb2Nrc1JlcXVlc3QSEgoKZnVs",
            "bF9ibG9jaxgBIAEoCBIZChFmdWxsX3RyYW5zYWN0aW9ucxgCIAEoCBIXCg9z",
            "ZXJpYWxpemVfYmxvY2sYAyABKAgi1gEKEUJsb2NrTm90aWZpY2F0aW9uEigK",
            "BHR5cGUYASABKA4yGi5wYi5CbG9ja05vdGlmaWNhdGlvbi5UeXBlEiMKCmJs",
            "b2NrX2luZm8YAiABKAsyDS5wYi5CbG9ja0luZm9IABIkCg9tYXJzaGFsZWRf",
            "YmxvY2sYAyABKAsyCS5wYi5CbG9ja0gAEhoKEHNlcmlhbGl6ZWRfYmxvY2sY",
            "BCABKAxIACInCgRUeXBlEg0KCUNPTk5FQ1RFRBAAEhAKDERJU0NPTk5FQ1RF",
            "RBABQgcKBWJsb2NrIo8CChdUcmFuc2FjdGlvbk5vdGlmaWNhdGlvbhIuCgR0",
            "eXBlGAEgASgOMiAucGIuVHJhbnNhY3Rpb25Ob3RpZmljYXRpb24uVHlwZRIw",
            "ChVjb25maXJtZWRfdHJhbnNhY3Rpb24YAiABKAsyDy5wYi5UcmFuc2FjdGlv",
            "bkgAEjkKF3VuY29uZmlybWVkX3RyYW5zYWN0aW9uGAMgASgLMhYucGIuTWVt",
            "cG9vbFRyYW5zYWN0aW9uSAASIAoWc2VyaWFsaXplZF90cmFuc2FjdGlvbhgE",
            "IAEoDEgAIiYKBFR5cGUSDwoLVU5DT05GSVJNRUQQABINCglDT05GSVJNRUQQ",
            "AUINCgt0cmFuc2FjdGlvbiL+AQoJQmxvY2tJbmZvEgwKBGhhc2gYASABKAwS",
            "DgoGaGVpZ2h0GAIgASgFEg8KB3ZlcnNpb24YAyABKAUSFgoOcHJldmlvdXNf",
            "YmxvY2sYBCABKAwSEwoLbWVya2xlX3Jvb3QYBSABKAwSEQoJdGltZXN0YW1w",
            "GAYgASgDEgwKBGJpdHMYByABKA0SDQoFbm9uY2UYCCABKA0SFQoNY29uZmly",
            "bWF0aW9ucxgJIAEoBRISCgpkaWZmaWN1bHR5GAogASgBEhcKD25leHRfYmxv",
            "Y2tfaGFzaBgLIAEoDBIMCgRzaXplGAwgASgFEhMKC21lZGlhbl90aW1lGA0g",
            "ASgDIsABCgVCbG9jaxIbCgRpbmZvGAEgASgLMg0ucGIuQmxvY2tJbmZvEjMK",
            "EHRyYW5zYWN0aW9uX2RhdGEYAiADKAsyGS5wYi5CbG9jay5UcmFuc2FjdGlv",
            "bkRhdGEaZQoPVHJhbnNhY3Rpb25EYXRhEhoKEHRyYW5zYWN0aW9uX2hhc2gY",
            "ASABKAxIABImCgt0cmFuc2FjdGlvbhgCIAEoCzIPLnBiLlRyYW5zYWN0aW9u",
            "SABCDgoMdHhpZHNfb3JfdHhzIs4ECgtUcmFuc2FjdGlvbhIMCgRoYXNoGAEg",
            "ASgMEg8KB3ZlcnNpb24YAiABKAUSJQoGaW5wdXRzGAMgAygLMhUucGIuVHJh",
            "bnNhY3Rpb24uSW5wdXQSJwoHb3V0cHV0cxgEIAMoCzIWLnBiLlRyYW5zYWN0",
            "aW9uLk91dHB1dBIRCglsb2NrX3RpbWUYBSABKA0SDAoEc2l6ZRgIIAEoBRIR",
            "Cgl0aW1lc3RhbXAYCSABKAMSFQoNY29uZmlybWF0aW9ucxgKIAEoBRIUCgxi",
            "bG9ja19oZWlnaHQYCyABKAUSEgoKYmxvY2tfaGFzaBgMIAEoDBrWAQoFSW5w",
            "dXQSDQoFaW5kZXgYASABKA0SMAoIb3V0cG9pbnQYAiABKAsyHi5wYi5UcmFu",
            "c2FjdGlvbi5JbnB1dC5PdXRwb2ludBIYChBzaWduYXR1cmVfc2NyaXB0GAMg",
            "ASgMEhAKCHNlcXVlbmNlGAQgASgNEg0KBXZhbHVlGAUgASgDEhcKD3ByZXZp",
            "b3VzX3NjcmlwdBgGIAEoDBIPCgdhZGRyZXNzGAcgASgJGicKCE91dHBvaW50",
            "EgwKBGhhc2gYASABKAwSDQoFaW5kZXgYAiABKA0agQEKBk91dHB1dBINCgVp",
            "bmRleBgBIAEoDRINCgV2YWx1ZRgCIAEoAxIVCg1wdWJrZXlfc2NyaXB0GAMg",
            "ASgMEg8KB2FkZHJlc3MYBCABKAkSFAoMc2NyaXB0X2NsYXNzGAUgASgJEhsK",
            "E2Rpc2Fzc2VtYmxlZF9zY3JpcHQYBiABKAkioAEKEk1lbXBvb2xUcmFuc2Fj",
            "dGlvbhIkCgt0cmFuc2FjdGlvbhgBIAEoCzIPLnBiLlRyYW5zYWN0aW9uEhIK",
            "CmFkZGVkX3RpbWUYAiABKAMSFAoMYWRkZWRfaGVpZ2h0GAMgASgFEgsKA2Zl",
            "ZRgEIAEoAxISCgpmZWVfcGVyX2tiGAUgASgDEhkKEXN0YXJ0aW5nX3ByaW9y",
            "aXR5GAYgASgBIpIBCg1VbnNwZW50T3V0cHV0EjAKCG91dHBvaW50GAEgASgL",
            "Mh4ucGIuVHJhbnNhY3Rpb24uSW5wdXQuT3V0cG9pbnQSFQoNcHVia2V5X3Nj",
            "cmlwdBgCIAEoDBINCgV2YWx1ZRgDIAEoAxITCgtpc19jb2luYmFzZRgEIAEo",
            "CBIUCgxibG9ja19oZWlnaHQYBSABKAUiigEKEVRyYW5zYWN0aW9uRmlsdGVy",
            "EhEKCWFkZHJlc3NlcxgBIAMoCRIxCglvdXRwb2ludHMYAiADKAsyHi5wYi5U",
            "cmFuc2FjdGlvbi5JbnB1dC5PdXRwb2ludBIVCg1kYXRhX2VsZW1lbnRzGAMg",
            "AygMEhgKEGFsbF90cmFuc2FjdGlvbnMYBCABKAgygAwKBmJjaHJwYxJJCg5H",
            "ZXRNZW1wb29sSW5mbxIZLnBiLkdldE1lbXBvb2xJbmZvUmVxdWVzdBoaLnBi",
            "LkdldE1lbXBvb2xJbmZvUmVzcG9uc2UiABI9CgpHZXRNZW1wb29sEhUucGIu",
            "R2V0TWVtcG9vbFJlcXVlc3QaFi5wYi5HZXRNZW1wb29sUmVzcG9uc2UiABJS",
            "ChFHZXRCbG9ja2NoYWluSW5mbxIcLnBiLkdldEJsb2NrY2hhaW5JbmZvUmVx",
            "dWVzdBodLnBiLkdldEJsb2NrY2hhaW5JbmZvUmVzcG9uc2UiABJDCgxHZXRC",
            "bG9ja0luZm8SFy5wYi5HZXRCbG9ja0luZm9SZXF1ZXN0GhgucGIuR2V0Qmxv",
            "Y2tJbmZvUmVzcG9uc2UiABI3CghHZXRCbG9jaxITLnBiLkdldEJsb2NrUmVx",
            "dWVzdBoULnBiLkdldEJsb2NrUmVzcG9uc2UiABJACgtHZXRSYXdCbG9jaxIW",
            "LnBiLkdldFJhd0Jsb2NrUmVxdWVzdBoXLnBiLkdldFJhd0Jsb2NrUmVzcG9u",
            "c2UiABJJCg5HZXRCbG9ja0ZpbHRlchIZLnBiLkdldEJsb2NrRmlsdGVyUmVx",
            "dWVzdBoaLnBiLkdldEJsb2NrRmlsdGVyUmVzcG9uc2UiABI9CgpHZXRIZWFk",
            "ZXJzEhUucGIuR2V0SGVhZGVyc1JlcXVlc3QaFi5wYi5HZXRIZWFkZXJzUmVz",
            "cG9uc2UiABJJCg5HZXRUcmFuc2FjdGlvbhIZLnBiLkdldFRyYW5zYWN0aW9u",
            "UmVxdWVzdBoaLnBiLkdldFRyYW5zYWN0aW9uUmVzcG9uc2UiABJSChFHZXRS",
            "YXdUcmFuc2FjdGlvbhIcLnBiLkdldFJhd1RyYW5zYWN0aW9uUmVxdWVzdBod",
            "LnBiLkdldFJhd1RyYW5zYWN0aW9uUmVzcG9uc2UiABJhChZHZXRBZGRyZXNz",
            "VHJhbnNhY3Rpb25zEiEucGIuR2V0QWRkcmVzc1RyYW5zYWN0aW9uc1JlcXVl",
            "c3QaIi5wYi5HZXRBZGRyZXNzVHJhbnNhY3Rpb25zUmVzcG9uc2UiABJqChlH",
            "ZXRSYXdBZGRyZXNzVHJhbnNhY3Rpb25zEiQucGIuR2V0UmF3QWRkcmVzc1Ry",
            "YW5zYWN0aW9uc1JlcXVlc3QaJS5wYi5HZXRSYXdBZGRyZXNzVHJhbnNhY3Rp",
            "b25zUmVzcG9uc2UiABJnChhHZXRBZGRyZXNzVW5zcGVudE91dHB1dHMSIy5w",
            "Yi5HZXRBZGRyZXNzVW5zcGVudE91dHB1dHNSZXF1ZXN0GiQucGIuR2V0QWRk",
            "cmVzc1Vuc3BlbnRPdXRwdXRzUmVzcG9uc2UiABJPChBHZXRVbnNwZW50T3V0",
            "cHV0EhsucGIuR2V0VW5zcGVudE91dHB1dFJlcXVlc3QaHC5wYi5HZXRVbnNw",
            "ZW50T3V0cHV0UmVzcG9uc2UiABJJCg5HZXRNZXJrbGVQcm9vZhIZLnBiLkdl",
            "dE1lcmtsZVByb29mUmVxdWVzdBoaLnBiLkdldE1lcmtsZVByb29mUmVzcG9u",
            "c2UiABJSChFTdWJtaXRUcmFuc2FjdGlvbhIcLnBiLlN1Ym1pdFRyYW5zYWN0",
            "aW9uUmVxdWVzdBodLnBiLlN1Ym1pdFRyYW5zYWN0aW9uUmVzcG9uc2UiABJa",
            "ChVTdWJzY3JpYmVUcmFuc2FjdGlvbnMSIC5wYi5TdWJzY3JpYmVUcmFuc2Fj",
            "dGlvbnNSZXF1ZXN0GhsucGIuVHJhbnNhY3Rpb25Ob3RpZmljYXRpb24iADAB",
            "EmEKGlN1YnNjcmliZVRyYW5zYWN0aW9uU3RyZWFtEiAucGIuU3Vic2NyaWJl",
            "VHJhbnNhY3Rpb25zUmVxdWVzdBobLnBiLlRyYW5zYWN0aW9uTm90aWZpY2F0",
            "aW9uIgAoATABEkgKD1N1YnNjcmliZUJsb2NrcxIaLnBiLlN1YnNjcmliZUJs",
            "b2Nrc1JlcXVlc3QaFS5wYi5CbG9ja05vdGlmaWNhdGlvbiIAMAFCMAoNY2Fz",
            "aC5iY2hkLnJwY1ofZ2l0aHViLmNvbS9nY2FzaC9iY2hkL2JjaHJwYy9wYmIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetMempoolInfoRequest), global::Pb.GetMempoolInfoRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetMempoolInfoResponse), global::Pb.GetMempoolInfoResponse.Parser, new[]{ "Size", "Bytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetMempoolRequest), global::Pb.GetMempoolRequest.Parser, new[]{ "FullTransactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetMempoolResponse), global::Pb.GetMempoolResponse.Parser, new[]{ "TransactionData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetMempoolResponse.Types.TransactionData), global::Pb.GetMempoolResponse.Types.TransactionData.Parser, new[]{ "TransactionHash", "Transaction" }, new[]{ "TxidsOrTxs" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetBlockchainInfoRequest), global::Pb.GetBlockchainInfoRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetBlockchainInfoResponse), global::Pb.GetBlockchainInfoResponse.Parser, new[]{ "BitcoinNet", "BestHeight", "BestBlockHash", "Difficulty", "MedianTime", "TxIndex", "AddrIndex" }, null, new[]{ typeof(global::Pb.GetBlockchainInfoResponse.Types.BitcoinNet) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetBlockInfoRequest), global::Pb.GetBlockInfoRequest.Parser, new[]{ "Hash", "Height" }, new[]{ "HashOrHeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetBlockInfoResponse), global::Pb.GetBlockInfoResponse.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetBlockRequest), global::Pb.GetBlockRequest.Parser, new[]{ "Hash", "Height", "FullTransactions" }, new[]{ "HashOrHeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetBlockResponse), global::Pb.GetBlockResponse.Parser, new[]{ "Block" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetRawBlockRequest), global::Pb.GetRawBlockRequest.Parser, new[]{ "Hash", "Height" }, new[]{ "HashOrHeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetRawBlockResponse), global::Pb.GetRawBlockResponse.Parser, new[]{ "Block" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetBlockFilterRequest), global::Pb.GetBlockFilterRequest.Parser, new[]{ "Hash", "Height" }, new[]{ "HashOrHeight" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetBlockFilterResponse), global::Pb.GetBlockFilterResponse.Parser, new[]{ "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetHeadersRequest), global::Pb.GetHeadersRequest.Parser, new[]{ "BlockLocatorHashes", "StopHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetHeadersResponse), global::Pb.GetHeadersResponse.Parser, new[]{ "Headers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetTransactionRequest), global::Pb.GetTransactionRequest.Parser, new[]{ "Hash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetTransactionResponse), global::Pb.GetTransactionResponse.Parser, new[]{ "Transaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetRawTransactionRequest), global::Pb.GetRawTransactionRequest.Parser, new[]{ "Hash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetRawTransactionResponse), global::Pb.GetRawTransactionResponse.Parser, new[]{ "Transaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetAddressTransactionsRequest), global::Pb.GetAddressTransactionsRequest.Parser, new[]{ "Address", "NbSkip", "NbFetch", "Hash", "Height" }, new[]{ "StartBlock" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetAddressTransactionsResponse), global::Pb.GetAddressTransactionsResponse.Parser, new[]{ "ConfirmedTransactions", "UnconfirmedTransactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetRawAddressTransactionsRequest), global::Pb.GetRawAddressTransactionsRequest.Parser, new[]{ "Address", "NbSkip", "NbFetch", "Hash", "Height" }, new[]{ "StartBlock" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetRawAddressTransactionsResponse), global::Pb.GetRawAddressTransactionsResponse.Parser, new[]{ "ConfirmedTransactions", "UnconfirmedTransactions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetAddressUnspentOutputsRequest), global::Pb.GetAddressUnspentOutputsRequest.Parser, new[]{ "Address", "IncludeMempool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetAddressUnspentOutputsResponse), global::Pb.GetAddressUnspentOutputsResponse.Parser, new[]{ "Outputs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetUnspentOutputRequest), global::Pb.GetUnspentOutputRequest.Parser, new[]{ "Hash", "Index", "IncludeMempool" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetUnspentOutputResponse), global::Pb.GetUnspentOutputResponse.Parser, new[]{ "Outpoint", "PubkeyScript", "Value", "IsCoinbase", "BlockHeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetMerkleProofRequest), global::Pb.GetMerkleProofRequest.Parser, new[]{ "TransactionHash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.GetMerkleProofResponse), global::Pb.GetMerkleProofResponse.Parser, new[]{ "Block", "Hashes", "Flags" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.SubmitTransactionRequest), global::Pb.SubmitTransactionRequest.Parser, new[]{ "Transaction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.SubmitTransactionResponse), global::Pb.SubmitTransactionResponse.Parser, new[]{ "Hash" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.SubscribeTransactionsRequest), global::Pb.SubscribeTransactionsRequest.Parser, new[]{ "Subscribe", "Unsubscribe", "IncludeMempool", "IncludeInBlock", "SerializeTx" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.SubscribeBlocksRequest), global::Pb.SubscribeBlocksRequest.Parser, new[]{ "FullBlock", "FullTransactions", "SerializeBlock" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.BlockNotification), global::Pb.BlockNotification.Parser, new[]{ "Type", "BlockInfo", "MarshaledBlock", "SerializedBlock" }, new[]{ "Block" }, new[]{ typeof(global::Pb.BlockNotification.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.TransactionNotification), global::Pb.TransactionNotification.Parser, new[]{ "Type", "ConfirmedTransaction", "UnconfirmedTransaction", "SerializedTransaction" }, new[]{ "Transaction" }, new[]{ typeof(global::Pb.TransactionNotification.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.BlockInfo), global::Pb.BlockInfo.Parser, new[]{ "Hash", "Height", "Version", "PreviousBlock", "MerkleRoot", "Timestamp", "Bits", "Nonce", "Confirmations", "Difficulty", "NextBlockHash", "Size", "MedianTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.Block), global::Pb.Block.Parser, new[]{ "Info", "TransactionData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Pb.Block.Types.TransactionData), global::Pb.Block.Types.TransactionData.Parser, new[]{ "TransactionHash", "Transaction" }, new[]{ "TxidsOrTxs" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.Transaction), global::Pb.Transaction.Parser, new[]{ "Hash", "Version", "Inputs", "Outputs", "LockTime", "Size", "Timestamp", "Confirmations", "BlockHeight", "BlockHash" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Pb.Transaction.Types.Input), global::Pb.Transaction.Types.Input.Parser, new[]{ "Index", "Outpoint", "SignatureScript", "Sequence", "Value", "PreviousScript", "Address" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Pb.Transaction.Types.Input.Types.Outpoint), global::Pb.Transaction.Types.Input.Types.Outpoint.Parser, new[]{ "Hash", "Index" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.Transaction.Types.Output), global::Pb.Transaction.Types.Output.Parser, new[]{ "Index", "Value", "PubkeyScript", "Address", "ScriptClass", "DisassembledScript" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.MempoolTransaction), global::Pb.MempoolTransaction.Parser, new[]{ "Transaction", "AddedTime", "AddedHeight", "Fee", "FeePerKb", "StartingPriority" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.UnspentOutput), global::Pb.UnspentOutput.Parser, new[]{ "Outpoint", "PubkeyScript", "Value", "IsCoinbase", "BlockHeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Pb.TransactionFilter), global::Pb.TransactionFilter.Parser, new[]{ "Addresses", "Outpoints", "DataElements", "AllTransactions" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetMempoolInfoRequest : pb::IMessage<GetMempoolInfoRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMempoolInfoRequest> _parser = new pb::MessageParser<GetMempoolInfoRequest>(() => new GetMempoolInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMempoolInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolInfoRequest(GetMempoolInfoRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolInfoRequest Clone() {
      return new GetMempoolInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMempoolInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMempoolInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMempoolInfoRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class GetMempoolInfoResponse : pb::IMessage<GetMempoolInfoResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMempoolInfoResponse> _parser = new pb::MessageParser<GetMempoolInfoResponse>(() => new GetMempoolInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMempoolInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolInfoResponse(GetMempoolInfoResponse other) : this() {
      size_ = other.size_;
      bytes_ = other.bytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolInfoResponse Clone() {
      return new GetMempoolInfoResponse(this);
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 1;
    private uint size_;
    /// <summary>
    /// The count of transactions in the mempool
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 2;
    private uint bytes_;
    /// <summary>
    /// The size in bytes of all transactions in the mempool
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Bytes {
      get { return bytes_; }
      set {
        bytes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMempoolInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMempoolInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Size != other.Size) return false;
      if (Bytes != other.Bytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Size != 0) hash ^= Size.GetHashCode();
      if (Bytes != 0) hash ^= Bytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Size != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Size);
      }
      if (Bytes != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Bytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Size != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Size);
      }
      if (Bytes != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Bytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Size);
      }
      if (Bytes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMempoolInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      if (other.Bytes != 0) {
        Bytes = other.Bytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Size = input.ReadUInt32();
            break;
          }
          case 16: {
            Bytes = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Size = input.ReadUInt32();
            break;
          }
          case 16: {
            Bytes = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetMempoolRequest : pb::IMessage<GetMempoolRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMempoolRequest> _parser = new pb::MessageParser<GetMempoolRequest>(() => new GetMempoolRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMempoolRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolRequest(GetMempoolRequest other) : this() {
      fullTransactions_ = other.fullTransactions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolRequest Clone() {
      return new GetMempoolRequest(this);
    }

    /// <summary>Field number for the "full_transactions" field.</summary>
    public const int FullTransactionsFieldNumber = 1;
    private bool fullTransactions_;
    /// <summary>
    /// When `full_transactions` is true, full transaction data is provided
    /// instead of just transaction hashes. Default is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FullTransactions {
      get { return fullTransactions_; }
      set {
        fullTransactions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMempoolRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMempoolRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FullTransactions != other.FullTransactions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FullTransactions != false) hash ^= FullTransactions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FullTransactions != false) {
        output.WriteRawTag(8);
        output.WriteBool(FullTransactions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FullTransactions != false) {
        output.WriteRawTag(8);
        output.WriteBool(FullTransactions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FullTransactions != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMempoolRequest other) {
      if (other == null) {
        return;
      }
      if (other.FullTransactions != false) {
        FullTransactions = other.FullTransactions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FullTransactions = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FullTransactions = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetMempoolResponse : pb::IMessage<GetMempoolResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMempoolResponse> _parser = new pb::MessageParser<GetMempoolResponse>(() => new GetMempoolResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMempoolResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolResponse(GetMempoolResponse other) : this() {
      transactionData_ = other.transactionData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMempoolResponse Clone() {
      return new GetMempoolResponse(this);
    }

    /// <summary>Field number for the "transaction_data" field.</summary>
    public const int TransactionDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Pb.GetMempoolResponse.Types.TransactionData> _repeated_transactionData_codec
        = pb::FieldCodec.ForMessage(10, global::Pb.GetMempoolResponse.Types.TransactionData.Parser);
    private readonly pbc::RepeatedField<global::Pb.GetMempoolResponse.Types.TransactionData> transactionData_ = new pbc::RepeatedField<global::Pb.GetMempoolResponse.Types.TransactionData>();
    /// <summary>
    /// List of unconfirmed transactions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pb.GetMempoolResponse.Types.TransactionData> TransactionData {
      get { return transactionData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMempoolResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMempoolResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactionData_.Equals(other.transactionData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactionData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      transactionData_.WriteTo(output, _repeated_transactionData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      transactionData_.WriteTo(ref output, _repeated_transactionData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactionData_.CalculateSize(_repeated_transactionData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMempoolResponse other) {
      if (other == null) {
        return;
      }
      transactionData_.Add(other.transactionData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactionData_.AddEntriesFrom(input, _repeated_transactionData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            transactionData_.AddEntriesFrom(ref input, _repeated_transactionData_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetMempoolResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class TransactionData : pb::IMessage<TransactionData>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TransactionData> _parser = new pb::MessageParser<TransactionData>(() => new TransactionData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TransactionData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pb.GetMempoolResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransactionData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransactionData(TransactionData other) : this() {
          switch (other.TxidsOrTxsCase) {
            case TxidsOrTxsOneofCase.TransactionHash:
              TransactionHash = other.TransactionHash;
              break;
            case TxidsOrTxsOneofCase.Transaction:
              Transaction = other.Transaction.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransactionData Clone() {
          return new TransactionData(this);
        }

        /// <summary>Field number for the "transaction_hash" field.</summary>
        public const int TransactionHashFieldNumber = 1;
        /// <summary>
        /// The transaction hash, little-endian.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString TransactionHash {
          get { return txidsOrTxsCase_ == TxidsOrTxsOneofCase.TransactionHash ? (pb::ByteString) txidsOrTxs_ : pb::ByteString.Empty; }
          set {
            txidsOrTxs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            txidsOrTxsCase_ = TxidsOrTxsOneofCase.TransactionHash;
          }
        }

        /// <summary>Field number for the "transaction" field.</summary>
        public const int TransactionFieldNumber = 2;
        /// <summary>
        /// The transaction data.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Pb.Transaction Transaction {
          get { return txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction ? (global::Pb.Transaction) txidsOrTxs_ : null; }
          set {
            txidsOrTxs_ = value;
            txidsOrTxsCase_ = value == null ? TxidsOrTxsOneofCase.None : TxidsOrTxsOneofCase.Transaction;
          }
        }

        private object txidsOrTxs_;
        /// <summary>Enum of possible cases for the "txids_or_txs" oneof.</summary>
        public enum TxidsOrTxsOneofCase {
          None = 0,
          TransactionHash = 1,
          Transaction = 2,
        }
        private TxidsOrTxsOneofCase txidsOrTxsCase_ = TxidsOrTxsOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TxidsOrTxsOneofCase TxidsOrTxsCase {
          get { return txidsOrTxsCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTxidsOrTxs() {
          txidsOrTxsCase_ = TxidsOrTxsOneofCase.None;
          txidsOrTxs_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TransactionData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TransactionData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TransactionHash != other.TransactionHash) return false;
          if (!object.Equals(Transaction, other.Transaction)) return false;
          if (TxidsOrTxsCase != other.TxidsOrTxsCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.TransactionHash) hash ^= TransactionHash.GetHashCode();
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) hash ^= Transaction.GetHashCode();
          hash ^= (int) txidsOrTxsCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.TransactionHash) {
            output.WriteRawTag(10);
            output.WriteBytes(TransactionHash);
          }
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) {
            output.WriteRawTag(18);
            output.WriteMessage(Transaction);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.TransactionHash) {
            output.WriteRawTag(10);
            output.WriteBytes(TransactionHash);
          }
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) {
            output.WriteRawTag(18);
            output.WriteMessage(Transaction);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.TransactionHash) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransactionHash);
          }
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TransactionData other) {
          if (other == null) {
            return;
          }
          switch (other.TxidsOrTxsCase) {
            case TxidsOrTxsOneofCase.TransactionHash:
              TransactionHash = other.TransactionHash;
              break;
            case TxidsOrTxsOneofCase.Transaction:
              if (Transaction == null) {
                Transaction = new global::Pb.Transaction();
              }
              Transaction.MergeFrom(other.Transaction);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TransactionHash = input.ReadBytes();
                break;
              }
              case 18: {
                global::Pb.Transaction subBuilder = new global::Pb.Transaction();
                if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) {
                  subBuilder.MergeFrom(Transaction);
                }
                input.ReadMessage(subBuilder);
                Transaction = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TransactionHash = input.ReadBytes();
                break;
              }
              case 18: {
                global::Pb.Transaction subBuilder = new global::Pb.Transaction();
                if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) {
                  subBuilder.MergeFrom(Transaction);
                }
                input.ReadMessage(subBuilder);
                Transaction = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class GetBlockchainInfoRequest : pb::IMessage<GetBlockchainInfoRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBlockchainInfoRequest> _parser = new pb::MessageParser<GetBlockchainInfoRequest>(() => new GetBlockchainInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockchainInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockchainInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockchainInfoRequest(GetBlockchainInfoRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockchainInfoRequest Clone() {
      return new GetBlockchainInfoRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockchainInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockchainInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockchainInfoRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class GetBlockchainInfoResponse : pb::IMessage<GetBlockchainInfoResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBlockchainInfoResponse> _parser = new pb::MessageParser<GetBlockchainInfoResponse>(() => new GetBlockchainInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockchainInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockchainInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockchainInfoResponse(GetBlockchainInfoResponse other) : this() {
      bitcoinNet_ = other.bitcoinNet_;
      bestHeight_ = other.bestHeight_;
      bestBlockHash_ = other.bestBlockHash_;
      difficulty_ = other.difficulty_;
      medianTime_ = other.medianTime_;
      txIndex_ = other.txIndex_;
      addrIndex_ = other.addrIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockchainInfoResponse Clone() {
      return new GetBlockchainInfoResponse(this);
    }

    /// <summary>Field number for the "bitcoin_net" field.</summary>
    public const int BitcoinNetFieldNumber = 1;
    private global::Pb.GetBlockchainInfoResponse.Types.BitcoinNet bitcoinNet_ = global::Pb.GetBlockchainInfoResponse.Types.BitcoinNet.Mainnet;
    /// <summary>
    /// Which network the node is operating on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.GetBlockchainInfoResponse.Types.BitcoinNet BitcoinNet {
      get { return bitcoinNet_; }
      set {
        bitcoinNet_ = value;
      }
    }

    /// <summary>Field number for the "best_height" field.</summary>
    public const int BestHeightFieldNumber = 2;
    private int bestHeight_;
    /// <summary>
    /// The current number of blocks on the longest chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BestHeight {
      get { return bestHeight_; }
      set {
        bestHeight_ = value;
      }
    }

    /// <summary>Field number for the "best_block_hash" field.</summary>
    public const int BestBlockHashFieldNumber = 3;
    private pb::ByteString bestBlockHash_ = pb::ByteString.Empty;
    /// <summary>
    /// The hash of the best (tip) block in the most-work fully-validated chain, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BestBlockHash {
      get { return bestBlockHash_; }
      set {
        bestBlockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 4;
    private double difficulty_;
    /// <summary>
    /// Threshold for adding new blocks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    /// <summary>Field number for the "median_time" field.</summary>
    public const int MedianTimeFieldNumber = 5;
    private long medianTime_;
    /// <summary>
    /// Median time of the last 11 blocks.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MedianTime {
      get { return medianTime_; }
      set {
        medianTime_ = value;
      }
    }

    /// <summary>Field number for the "tx_index" field.</summary>
    public const int TxIndexFieldNumber = 6;
    private bool txIndex_;
    /// <summary>
    /// When `tx_index` is true, the node has full transaction index enabled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TxIndex {
      get { return txIndex_; }
      set {
        txIndex_ = value;
      }
    }

    /// <summary>Field number for the "addr_index" field.</summary>
    public const int AddrIndexFieldNumber = 7;
    private bool addrIndex_;
    /// <summary>
    /// When `addr_index` is true, the node has address index enabled and may
    /// be used with call related by address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AddrIndex {
      get { return addrIndex_; }
      set {
        addrIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockchainInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockchainInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BitcoinNet != other.BitcoinNet) return false;
      if (BestHeight != other.BestHeight) return false;
      if (BestBlockHash != other.BestBlockHash) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Difficulty, other.Difficulty)) return false;
      if (MedianTime != other.MedianTime) return false;
      if (TxIndex != other.TxIndex) return false;
      if (AddrIndex != other.AddrIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BitcoinNet != global::Pb.GetBlockchainInfoResponse.Types.BitcoinNet.Mainnet) hash ^= BitcoinNet.GetHashCode();
      if (BestHeight != 0) hash ^= BestHeight.GetHashCode();
      if (BestBlockHash.Length != 0) hash ^= BestBlockHash.GetHashCode();
      if (Difficulty != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Difficulty);
      if (MedianTime != 0L) hash ^= MedianTime.GetHashCode();
      if (TxIndex != false) hash ^= TxIndex.GetHashCode();
      if (AddrIndex != false) hash ^= AddrIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BitcoinNet != global::Pb.GetBlockchainInfoResponse.Types.BitcoinNet.Mainnet) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BitcoinNet);
      }
      if (BestHeight != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BestHeight);
      }
      if (BestBlockHash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(BestBlockHash);
      }
      if (Difficulty != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Difficulty);
      }
      if (MedianTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MedianTime);
      }
      if (TxIndex != false) {
        output.WriteRawTag(48);
        output.WriteBool(TxIndex);
      }
      if (AddrIndex != false) {
        output.WriteRawTag(56);
        output.WriteBool(AddrIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BitcoinNet != global::Pb.GetBlockchainInfoResponse.Types.BitcoinNet.Mainnet) {
        output.WriteRawTag(8);
        output.WriteEnum((int) BitcoinNet);
      }
      if (BestHeight != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BestHeight);
      }
      if (BestBlockHash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(BestBlockHash);
      }
      if (Difficulty != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(Difficulty);
      }
      if (MedianTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(MedianTime);
      }
      if (TxIndex != false) {
        output.WriteRawTag(48);
        output.WriteBool(TxIndex);
      }
      if (AddrIndex != false) {
        output.WriteRawTag(56);
        output.WriteBool(AddrIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BitcoinNet != global::Pb.GetBlockchainInfoResponse.Types.BitcoinNet.Mainnet) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BitcoinNet);
      }
      if (BestHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BestHeight);
      }
      if (BestBlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BestBlockHash);
      }
      if (Difficulty != 0D) {
        size += 1 + 8;
      }
      if (MedianTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MedianTime);
      }
      if (TxIndex != false) {
        size += 1 + 1;
      }
      if (AddrIndex != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockchainInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.BitcoinNet != global::Pb.GetBlockchainInfoResponse.Types.BitcoinNet.Mainnet) {
        BitcoinNet = other.BitcoinNet;
      }
      if (other.BestHeight != 0) {
        BestHeight = other.BestHeight;
      }
      if (other.BestBlockHash.Length != 0) {
        BestBlockHash = other.BestBlockHash;
      }
      if (other.Difficulty != 0D) {
        Difficulty = other.Difficulty;
      }
      if (other.MedianTime != 0L) {
        MedianTime = other.MedianTime;
      }
      if (other.TxIndex != false) {
        TxIndex = other.TxIndex;
      }
      if (other.AddrIndex != false) {
        AddrIndex = other.AddrIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BitcoinNet = (global::Pb.GetBlockchainInfoResponse.Types.BitcoinNet) input.ReadEnum();
            break;
          }
          case 16: {
            BestHeight = input.ReadInt32();
            break;
          }
          case 26: {
            BestBlockHash = input.ReadBytes();
            break;
          }
          case 33: {
            Difficulty = input.ReadDouble();
            break;
          }
          case 40: {
            MedianTime = input.ReadInt64();
            break;
          }
          case 48: {
            TxIndex = input.ReadBool();
            break;
          }
          case 56: {
            AddrIndex = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BitcoinNet = (global::Pb.GetBlockchainInfoResponse.Types.BitcoinNet) input.ReadEnum();
            break;
          }
          case 16: {
            BestHeight = input.ReadInt32();
            break;
          }
          case 26: {
            BestBlockHash = input.ReadBytes();
            break;
          }
          case 33: {
            Difficulty = input.ReadDouble();
            break;
          }
          case 40: {
            MedianTime = input.ReadInt64();
            break;
          }
          case 48: {
            TxIndex = input.ReadBool();
            break;
          }
          case 56: {
            AddrIndex = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetBlockchainInfoResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Bitcoin network types
      /// </summary>
      public enum BitcoinNet {
        /// <summary>
        /// Live public network with monetary value.
        /// </summary>
        [pbr::OriginalName("MAINNET")] Mainnet = 0,
        /// <summary>
        /// An isolated environment for automated testing.
        /// </summary>
        [pbr::OriginalName("REGTEST")] Regtest = 1,
        /// <summary>
        /// A public environment where monetary value is agreed to be zero,
        /// and some checks for transaction conformity are disabled.
        /// </summary>
        [pbr::OriginalName("TESTNET3")] Testnet3 = 2,
        /// <summary>
        /// Private testnets for large scale simulations (or stress testing),
        /// where a specified list of nodes is used, rather than node discovery.
        /// </summary>
        [pbr::OriginalName("SIMNET")] Simnet = 3,
      }

    }
    #endregion

  }

  public sealed partial class GetBlockInfoRequest : pb::IMessage<GetBlockInfoRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBlockInfoRequest> _parser = new pb::MessageParser<GetBlockInfoRequest>(() => new GetBlockInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockInfoRequest(GetBlockInfoRequest other) : this() {
      switch (other.HashOrHeightCase) {
        case HashOrHeightOneofCase.Hash:
          Hash = other.Hash;
          break;
        case HashOrHeightOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockInfoRequest Clone() {
      return new GetBlockInfoRequest(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    /// <summary>
    /// The block hash as a byte array or base64 encoded string, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hashOrHeightCase_ == HashOrHeightOneofCase.Hash ? (pb::ByteString) hashOrHeight_ : pb::ByteString.Empty; }
      set {
        hashOrHeight_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        hashOrHeightCase_ = HashOrHeightOneofCase.Hash;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    /// <summary>
    /// The block number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return hashOrHeightCase_ == HashOrHeightOneofCase.Height ? (int) hashOrHeight_ : 0; }
      set {
        hashOrHeight_ = value;
        hashOrHeightCase_ = HashOrHeightOneofCase.Height;
      }
    }

    private object hashOrHeight_;
    /// <summary>Enum of possible cases for the "hash_or_height" oneof.</summary>
    public enum HashOrHeightOneofCase {
      None = 0,
      Hash = 1,
      Height = 2,
    }
    private HashOrHeightOneofCase hashOrHeightCase_ = HashOrHeightOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashOrHeightOneofCase HashOrHeightCase {
      get { return hashOrHeightCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHashOrHeight() {
      hashOrHeightCase_ = HashOrHeightOneofCase.None;
      hashOrHeight_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (Height != other.Height) return false;
      if (HashOrHeightCase != other.HashOrHeightCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) hash ^= Hash.GetHashCode();
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) hash ^= Height.GetHashCode();
      hash ^= (int) hashOrHeightCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockInfoRequest other) {
      if (other == null) {
        return;
      }
      switch (other.HashOrHeightCase) {
        case HashOrHeightOneofCase.Hash:
          Hash = other.Hash;
          break;
        case HashOrHeightOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetBlockInfoResponse : pb::IMessage<GetBlockInfoResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBlockInfoResponse> _parser = new pb::MessageParser<GetBlockInfoResponse>(() => new GetBlockInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockInfoResponse(GetBlockInfoResponse other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockInfoResponse Clone() {
      return new GetBlockInfoResponse(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::Pb.BlockInfo info_;
    /// <summary>
    /// Marshaled block header data, as well as metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.BlockInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Pb.BlockInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Pb.BlockInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Pb.BlockInfo();
            }
            input.ReadMessage(Info);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetBlockRequest : pb::IMessage<GetBlockRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBlockRequest> _parser = new pb::MessageParser<GetBlockRequest>(() => new GetBlockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequest(GetBlockRequest other) : this() {
      fullTransactions_ = other.fullTransactions_;
      switch (other.HashOrHeightCase) {
        case HashOrHeightOneofCase.Hash:
          Hash = other.Hash;
          break;
        case HashOrHeightOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockRequest Clone() {
      return new GetBlockRequest(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    /// <summary>
    /// The block hash as a byte array or base64 encoded string, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hashOrHeightCase_ == HashOrHeightOneofCase.Hash ? (pb::ByteString) hashOrHeight_ : pb::ByteString.Empty; }
      set {
        hashOrHeight_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        hashOrHeightCase_ = HashOrHeightOneofCase.Hash;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    /// <summary>
    /// The block number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return hashOrHeightCase_ == HashOrHeightOneofCase.Height ? (int) hashOrHeight_ : 0; }
      set {
        hashOrHeight_ = value;
        hashOrHeightCase_ = HashOrHeightOneofCase.Height;
      }
    }

    /// <summary>Field number for the "full_transactions" field.</summary>
    public const int FullTransactionsFieldNumber = 3;
    private bool fullTransactions_;
    /// <summary>
    /// When `full_transactions` is true, full transactions are returned
    /// instead of just hashes. Default is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FullTransactions {
      get { return fullTransactions_; }
      set {
        fullTransactions_ = value;
      }
    }

    private object hashOrHeight_;
    /// <summary>Enum of possible cases for the "hash_or_height" oneof.</summary>
    public enum HashOrHeightOneofCase {
      None = 0,
      Hash = 1,
      Height = 2,
    }
    private HashOrHeightOneofCase hashOrHeightCase_ = HashOrHeightOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashOrHeightOneofCase HashOrHeightCase {
      get { return hashOrHeightCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHashOrHeight() {
      hashOrHeightCase_ = HashOrHeightOneofCase.None;
      hashOrHeight_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (Height != other.Height) return false;
      if (FullTransactions != other.FullTransactions) return false;
      if (HashOrHeightCase != other.HashOrHeightCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) hash ^= Hash.GetHashCode();
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) hash ^= Height.GetHashCode();
      if (FullTransactions != false) hash ^= FullTransactions.GetHashCode();
      hash ^= (int) hashOrHeightCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (FullTransactions != false) {
        output.WriteRawTag(24);
        output.WriteBool(FullTransactions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (FullTransactions != false) {
        output.WriteRawTag(24);
        output.WriteBool(FullTransactions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (FullTransactions != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockRequest other) {
      if (other == null) {
        return;
      }
      if (other.FullTransactions != false) {
        FullTransactions = other.FullTransactions;
      }
      switch (other.HashOrHeightCase) {
        case HashOrHeightOneofCase.Hash:
          Hash = other.Hash;
          break;
        case HashOrHeightOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 24: {
            FullTransactions = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 24: {
            FullTransactions = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetBlockResponse : pb::IMessage<GetBlockResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBlockResponse> _parser = new pb::MessageParser<GetBlockResponse>(() => new GetBlockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponse(GetBlockResponse other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockResponse Clone() {
      return new GetBlockResponse(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private global::Pb.Block block_;
    /// <summary>
    /// A marshaled block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.Block Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (block_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (block_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockResponse other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::Pb.Block();
        }
        Block.MergeFrom(other.Block);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (block_ == null) {
              Block = new global::Pb.Block();
            }
            input.ReadMessage(Block);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (block_ == null) {
              Block = new global::Pb.Block();
            }
            input.ReadMessage(Block);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRawBlockRequest : pb::IMessage<GetRawBlockRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRawBlockRequest> _parser = new pb::MessageParser<GetRawBlockRequest>(() => new GetRawBlockRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRawBlockRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawBlockRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawBlockRequest(GetRawBlockRequest other) : this() {
      switch (other.HashOrHeightCase) {
        case HashOrHeightOneofCase.Hash:
          Hash = other.Hash;
          break;
        case HashOrHeightOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawBlockRequest Clone() {
      return new GetRawBlockRequest(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    /// <summary>
    /// The block hash as a byte array or base64 encoded string, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hashOrHeightCase_ == HashOrHeightOneofCase.Hash ? (pb::ByteString) hashOrHeight_ : pb::ByteString.Empty; }
      set {
        hashOrHeight_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        hashOrHeightCase_ = HashOrHeightOneofCase.Hash;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    /// <summary>
    /// The block number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return hashOrHeightCase_ == HashOrHeightOneofCase.Height ? (int) hashOrHeight_ : 0; }
      set {
        hashOrHeight_ = value;
        hashOrHeightCase_ = HashOrHeightOneofCase.Height;
      }
    }

    private object hashOrHeight_;
    /// <summary>Enum of possible cases for the "hash_or_height" oneof.</summary>
    public enum HashOrHeightOneofCase {
      None = 0,
      Hash = 1,
      Height = 2,
    }
    private HashOrHeightOneofCase hashOrHeightCase_ = HashOrHeightOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashOrHeightOneofCase HashOrHeightCase {
      get { return hashOrHeightCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHashOrHeight() {
      hashOrHeightCase_ = HashOrHeightOneofCase.None;
      hashOrHeight_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRawBlockRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRawBlockRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (Height != other.Height) return false;
      if (HashOrHeightCase != other.HashOrHeightCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) hash ^= Hash.GetHashCode();
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) hash ^= Height.GetHashCode();
      hash ^= (int) hashOrHeightCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRawBlockRequest other) {
      if (other == null) {
        return;
      }
      switch (other.HashOrHeightCase) {
        case HashOrHeightOneofCase.Hash:
          Hash = other.Hash;
          break;
        case HashOrHeightOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRawBlockResponse : pb::IMessage<GetRawBlockResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRawBlockResponse> _parser = new pb::MessageParser<GetRawBlockResponse>(() => new GetRawBlockResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRawBlockResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawBlockResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawBlockResponse(GetRawBlockResponse other) : this() {
      block_ = other.block_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawBlockResponse Clone() {
      return new GetRawBlockResponse(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private pb::ByteString block_ = pb::ByteString.Empty;
    /// <summary>
    /// Raw block data (with header) serialized according the the bitcoin block protocol.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Block {
      get { return block_; }
      set {
        block_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRawBlockResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRawBlockResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Block != other.Block) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Block.Length != 0) hash ^= Block.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Block.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Block.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Block);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Block.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Block);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRawBlockResponse other) {
      if (other == null) {
        return;
      }
      if (other.Block.Length != 0) {
        Block = other.Block;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Block = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Block = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetBlockFilterRequest : pb::IMessage<GetBlockFilterRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBlockFilterRequest> _parser = new pb::MessageParser<GetBlockFilterRequest>(() => new GetBlockFilterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockFilterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockFilterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockFilterRequest(GetBlockFilterRequest other) : this() {
      switch (other.HashOrHeightCase) {
        case HashOrHeightOneofCase.Hash:
          Hash = other.Hash;
          break;
        case HashOrHeightOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockFilterRequest Clone() {
      return new GetBlockFilterRequest(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    /// <summary>
    /// The block hash as a byte array or base64 encoded string, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hashOrHeightCase_ == HashOrHeightOneofCase.Hash ? (pb::ByteString) hashOrHeight_ : pb::ByteString.Empty; }
      set {
        hashOrHeight_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        hashOrHeightCase_ = HashOrHeightOneofCase.Hash;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    /// <summary>
    /// The block number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return hashOrHeightCase_ == HashOrHeightOneofCase.Height ? (int) hashOrHeight_ : 0; }
      set {
        hashOrHeight_ = value;
        hashOrHeightCase_ = HashOrHeightOneofCase.Height;
      }
    }

    private object hashOrHeight_;
    /// <summary>Enum of possible cases for the "hash_or_height" oneof.</summary>
    public enum HashOrHeightOneofCase {
      None = 0,
      Hash = 1,
      Height = 2,
    }
    private HashOrHeightOneofCase hashOrHeightCase_ = HashOrHeightOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HashOrHeightOneofCase HashOrHeightCase {
      get { return hashOrHeightCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearHashOrHeight() {
      hashOrHeightCase_ = HashOrHeightOneofCase.None;
      hashOrHeight_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockFilterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockFilterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (Height != other.Height) return false;
      if (HashOrHeightCase != other.HashOrHeightCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) hash ^= Hash.GetHashCode();
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) hash ^= Height.GetHashCode();
      hash ^= (int) hashOrHeightCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Hash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (hashOrHeightCase_ == HashOrHeightOneofCase.Height) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockFilterRequest other) {
      if (other == null) {
        return;
      }
      switch (other.HashOrHeightCase) {
        case HashOrHeightOneofCase.Hash:
          Hash = other.Hash;
          break;
        case HashOrHeightOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetBlockFilterResponse : pb::IMessage<GetBlockFilterResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetBlockFilterResponse> _parser = new pb::MessageParser<GetBlockFilterResponse>(() => new GetBlockFilterResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetBlockFilterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockFilterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockFilterResponse(GetBlockFilterResponse other) : this() {
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetBlockFilterResponse Clone() {
      return new GetBlockFilterResponse(this);
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 1;
    private pb::ByteString filter_ = pb::ByteString.Empty;
    /// <summary>
    /// A compact filter matching input outpoints and public key scripts contained
    /// in a block (encoded according to BIP158).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetBlockFilterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetBlockFilterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Filter.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetBlockFilterResponse other) {
      if (other == null) {
        return;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filter = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Filter = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request headers using a list of known block hashes.
  /// </summary>
  public sealed partial class GetHeadersRequest : pb::IMessage<GetHeadersRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetHeadersRequest> _parser = new pb::MessageParser<GetHeadersRequest>(() => new GetHeadersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHeadersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersRequest(GetHeadersRequest other) : this() {
      blockLocatorHashes_ = other.blockLocatorHashes_.Clone();
      stopHash_ = other.stopHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersRequest Clone() {
      return new GetHeadersRequest(this);
    }

    /// <summary>Field number for the "block_locator_hashes" field.</summary>
    public const int BlockLocatorHashesFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_blockLocatorHashes_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> blockLocatorHashes_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// A list of block hashes known to the client (most recent first) which
    /// is exponentially sparser toward the genesis block (0), little-endian.
    /// Common practice is to include all of the last 10 blocks, and then
    /// 9 blocks for each order of ten thereafter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> BlockLocatorHashes {
      get { return blockLocatorHashes_; }
    }

    /// <summary>Field number for the "stop_hash" field.</summary>
    public const int StopHashFieldNumber = 2;
    private pb::ByteString stopHash_ = pb::ByteString.Empty;
    /// <summary>
    /// hash of the latest desired block header, little-endian; only blocks
    /// occurring before the stop will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString StopHash {
      get { return stopHash_; }
      set {
        stopHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHeadersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHeadersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!blockLocatorHashes_.Equals(other.blockLocatorHashes_)) return false;
      if (StopHash != other.StopHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= blockLocatorHashes_.GetHashCode();
      if (StopHash.Length != 0) hash ^= StopHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      blockLocatorHashes_.WriteTo(output, _repeated_blockLocatorHashes_codec);
      if (StopHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StopHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      blockLocatorHashes_.WriteTo(ref output, _repeated_blockLocatorHashes_codec);
      if (StopHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(StopHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += blockLocatorHashes_.CalculateSize(_repeated_blockLocatorHashes_codec);
      if (StopHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(StopHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHeadersRequest other) {
      if (other == null) {
        return;
      }
      blockLocatorHashes_.Add(other.blockLocatorHashes_);
      if (other.StopHash.Length != 0) {
        StopHash = other.StopHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            blockLocatorHashes_.AddEntriesFrom(input, _repeated_blockLocatorHashes_codec);
            break;
          }
          case 18: {
            StopHash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            blockLocatorHashes_.AddEntriesFrom(ref input, _repeated_blockLocatorHashes_codec);
            break;
          }
          case 18: {
            StopHash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetHeadersResponse : pb::IMessage<GetHeadersResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetHeadersResponse> _parser = new pb::MessageParser<GetHeadersResponse>(() => new GetHeadersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHeadersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersResponse(GetHeadersResponse other) : this() {
      headers_ = other.headers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHeadersResponse Clone() {
      return new GetHeadersResponse(this);
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Pb.BlockInfo> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(10, global::Pb.BlockInfo.Parser);
    private readonly pbc::RepeatedField<global::Pb.BlockInfo> headers_ = new pbc::RepeatedField<global::Pb.BlockInfo>();
    /// <summary>
    /// List of block headers.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pb.BlockInfo> Headers {
      get { return headers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHeadersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHeadersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!headers_.Equals(other.headers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= headers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      headers_.WriteTo(output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      headers_.WriteTo(ref output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHeadersResponse other) {
      if (other == null) {
        return;
      }
      headers_.Add(other.headers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            headers_.AddEntriesFrom(ref input, _repeated_headers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Get a transaction from a transaction hash.
  /// </summary>
  public sealed partial class GetTransactionRequest : pb::IMessage<GetTransactionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTransactionRequest> _parser = new pb::MessageParser<GetTransactionRequest>(() => new GetTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionRequest(GetTransactionRequest other) : this() {
      hash_ = other.hash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionRequest Clone() {
      return new GetTransactionRequest(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    /// <summary>
    /// A transaction hash, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetTransactionResponse : pb::IMessage<GetTransactionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTransactionResponse> _parser = new pb::MessageParser<GetTransactionResponse>(() => new GetTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionResponse(GetTransactionResponse other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTransactionResponse Clone() {
      return new GetTransactionResponse(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Pb.Transaction transaction_;
    /// <summary>
    /// A marshaled transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTransactionResponse other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Pb.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Pb.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Pb.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Get an encoded transaction from a transaction hash.
  /// </summary>
  public sealed partial class GetRawTransactionRequest : pb::IMessage<GetRawTransactionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRawTransactionRequest> _parser = new pb::MessageParser<GetRawTransactionRequest>(() => new GetRawTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRawTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawTransactionRequest(GetRawTransactionRequest other) : this() {
      hash_ = other.hash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawTransactionRequest Clone() {
      return new GetRawTransactionRequest(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    /// <summary>
    /// A transaction hash, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRawTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRawTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRawTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRawTransactionResponse : pb::IMessage<GetRawTransactionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRawTransactionResponse> _parser = new pb::MessageParser<GetRawTransactionResponse>(() => new GetRawTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRawTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawTransactionResponse(GetRawTransactionResponse other) : this() {
      transaction_ = other.transaction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawTransactionResponse Clone() {
      return new GetRawTransactionResponse(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private pb::ByteString transaction_ = pb::ByteString.Empty;
    /// <summary>
    /// Raw transaction in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Transaction {
      get { return transaction_; }
      set {
        transaction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRawTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRawTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Transaction != other.Transaction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Transaction.Length != 0) hash ^= Transaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Transaction.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Transaction.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Transaction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Transaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRawTransactionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Transaction.Length != 0) {
        Transaction = other.Transaction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Transaction = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Transaction = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Get marshaled transactions related to a specific address.
  ///
  /// RECOMMENDED:
  /// Parameters have been provided to query without creating
  ///   performance issues on the node or client.
  ///
  /// - The number of transactions to skip and fetch allow for iterating
  ///       over a large set of transactions, if necessary.
  ///
  /// - A starting block parameter (either `hash` or `height`)
  ///       may then be used to filter results to those occurring
  ///       after a certain time.
  ///
  /// This approach will reduce network traffic and response processing
  ///   for the client, as well as reduce workload on the node.
  /// </summary>
  public sealed partial class GetAddressTransactionsRequest : pb::IMessage<GetAddressTransactionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAddressTransactionsRequest> _parser = new pb::MessageParser<GetAddressTransactionsRequest>(() => new GetAddressTransactionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAddressTransactionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressTransactionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressTransactionsRequest(GetAddressTransactionsRequest other) : this() {
      address_ = other.address_;
      nbSkip_ = other.nbSkip_;
      nbFetch_ = other.nbFetch_;
      switch (other.StartBlockCase) {
        case StartBlockOneofCase.Hash:
          Hash = other.Hash;
          break;
        case StartBlockOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressTransactionsRequest Clone() {
      return new GetAddressTransactionsRequest(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    /// <summary>
    /// The address to query transactions, in lowercase cashaddr format.
    /// The network prefix is optional (i.e. "cashaddress:").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nb_skip" field.</summary>
    public const int NbSkipFieldNumber = 2;
    private uint nbSkip_;
    /// <summary>
    /// The number of confirmed transactions to skip, starting with the oldest first.
    /// Does not affect results of unconfirmed transactions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NbSkip {
      get { return nbSkip_; }
      set {
        nbSkip_ = value;
      }
    }

    /// <summary>Field number for the "nb_fetch" field.</summary>
    public const int NbFetchFieldNumber = 3;
    private uint nbFetch_;
    /// <summary>
    /// Specify the number of transactions to fetch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NbFetch {
      get { return nbFetch_; }
      set {
        nbFetch_ = value;
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 4;
    /// <summary>
    /// Recommended. Only get transactions after (or within) a
    /// starting block identified by hash, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return startBlockCase_ == StartBlockOneofCase.Hash ? (pb::ByteString) startBlock_ : pb::ByteString.Empty; }
      set {
        startBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        startBlockCase_ = StartBlockOneofCase.Hash;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 5;
    /// <summary>
    /// Recommended. Only get transactions after (or within) a
    /// starting block identified by block number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return startBlockCase_ == StartBlockOneofCase.Height ? (int) startBlock_ : 0; }
      set {
        startBlock_ = value;
        startBlockCase_ = StartBlockOneofCase.Height;
      }
    }

    private object startBlock_;
    /// <summary>Enum of possible cases for the "start_block" oneof.</summary>
    public enum StartBlockOneofCase {
      None = 0,
      Hash = 4,
      Height = 5,
    }
    private StartBlockOneofCase startBlockCase_ = StartBlockOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBlockOneofCase StartBlockCase {
      get { return startBlockCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStartBlock() {
      startBlockCase_ = StartBlockOneofCase.None;
      startBlock_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAddressTransactionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAddressTransactionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (NbSkip != other.NbSkip) return false;
      if (NbFetch != other.NbFetch) return false;
      if (Hash != other.Hash) return false;
      if (Height != other.Height) return false;
      if (StartBlockCase != other.StartBlockCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (NbSkip != 0) hash ^= NbSkip.GetHashCode();
      if (NbFetch != 0) hash ^= NbFetch.GetHashCode();
      if (startBlockCase_ == StartBlockOneofCase.Hash) hash ^= Hash.GetHashCode();
      if (startBlockCase_ == StartBlockOneofCase.Height) hash ^= Height.GetHashCode();
      hash ^= (int) startBlockCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (NbSkip != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NbSkip);
      }
      if (NbFetch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NbFetch);
      }
      if (startBlockCase_ == StartBlockOneofCase.Hash) {
        output.WriteRawTag(34);
        output.WriteBytes(Hash);
      }
      if (startBlockCase_ == StartBlockOneofCase.Height) {
        output.WriteRawTag(40);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (NbSkip != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NbSkip);
      }
      if (NbFetch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NbFetch);
      }
      if (startBlockCase_ == StartBlockOneofCase.Hash) {
        output.WriteRawTag(34);
        output.WriteBytes(Hash);
      }
      if (startBlockCase_ == StartBlockOneofCase.Height) {
        output.WriteRawTag(40);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (NbSkip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbSkip);
      }
      if (NbFetch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbFetch);
      }
      if (startBlockCase_ == StartBlockOneofCase.Hash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (startBlockCase_ == StartBlockOneofCase.Height) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAddressTransactionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.NbSkip != 0) {
        NbSkip = other.NbSkip;
      }
      if (other.NbFetch != 0) {
        NbFetch = other.NbFetch;
      }
      switch (other.StartBlockCase) {
        case StartBlockOneofCase.Hash:
          Hash = other.Hash;
          break;
        case StartBlockOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            NbSkip = input.ReadUInt32();
            break;
          }
          case 24: {
            NbFetch = input.ReadUInt32();
            break;
          }
          case 34: {
            Hash = input.ReadBytes();
            break;
          }
          case 40: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            NbSkip = input.ReadUInt32();
            break;
          }
          case 24: {
            NbFetch = input.ReadUInt32();
            break;
          }
          case 34: {
            Hash = input.ReadBytes();
            break;
          }
          case 40: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetAddressTransactionsResponse : pb::IMessage<GetAddressTransactionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAddressTransactionsResponse> _parser = new pb::MessageParser<GetAddressTransactionsResponse>(() => new GetAddressTransactionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAddressTransactionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressTransactionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressTransactionsResponse(GetAddressTransactionsResponse other) : this() {
      confirmedTransactions_ = other.confirmedTransactions_.Clone();
      unconfirmedTransactions_ = other.unconfirmedTransactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressTransactionsResponse Clone() {
      return new GetAddressTransactionsResponse(this);
    }

    /// <summary>Field number for the "confirmed_transactions" field.</summary>
    public const int ConfirmedTransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Pb.Transaction> _repeated_confirmedTransactions_codec
        = pb::FieldCodec.ForMessage(10, global::Pb.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Pb.Transaction> confirmedTransactions_ = new pbc::RepeatedField<global::Pb.Transaction>();
    /// <summary>
    /// Transactions that have been included in a block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pb.Transaction> ConfirmedTransactions {
      get { return confirmedTransactions_; }
    }

    /// <summary>Field number for the "unconfirmed_transactions" field.</summary>
    public const int UnconfirmedTransactionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Pb.MempoolTransaction> _repeated_unconfirmedTransactions_codec
        = pb::FieldCodec.ForMessage(18, global::Pb.MempoolTransaction.Parser);
    private readonly pbc::RepeatedField<global::Pb.MempoolTransaction> unconfirmedTransactions_ = new pbc::RepeatedField<global::Pb.MempoolTransaction>();
    /// <summary>
    /// Transactions in mempool which have not been included in a block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pb.MempoolTransaction> UnconfirmedTransactions {
      get { return unconfirmedTransactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAddressTransactionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAddressTransactionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!confirmedTransactions_.Equals(other.confirmedTransactions_)) return false;
      if(!unconfirmedTransactions_.Equals(other.unconfirmedTransactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= confirmedTransactions_.GetHashCode();
      hash ^= unconfirmedTransactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      confirmedTransactions_.WriteTo(output, _repeated_confirmedTransactions_codec);
      unconfirmedTransactions_.WriteTo(output, _repeated_unconfirmedTransactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      confirmedTransactions_.WriteTo(ref output, _repeated_confirmedTransactions_codec);
      unconfirmedTransactions_.WriteTo(ref output, _repeated_unconfirmedTransactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += confirmedTransactions_.CalculateSize(_repeated_confirmedTransactions_codec);
      size += unconfirmedTransactions_.CalculateSize(_repeated_unconfirmedTransactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAddressTransactionsResponse other) {
      if (other == null) {
        return;
      }
      confirmedTransactions_.Add(other.confirmedTransactions_);
      unconfirmedTransactions_.Add(other.unconfirmedTransactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            confirmedTransactions_.AddEntriesFrom(input, _repeated_confirmedTransactions_codec);
            break;
          }
          case 18: {
            unconfirmedTransactions_.AddEntriesFrom(input, _repeated_unconfirmedTransactions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            confirmedTransactions_.AddEntriesFrom(ref input, _repeated_confirmedTransactions_codec);
            break;
          }
          case 18: {
            unconfirmedTransactions_.AddEntriesFrom(ref input, _repeated_unconfirmedTransactions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Get encoded transactions related to a specific address.
  ///
  /// RECOMMENDED:
  /// Parameters have been provided to query without creating
  ///   performance issues on the node or client.
  ///
  /// - The number of transactions to skip and fetch allow for iterating
  ///       over a large set of transactions, if necessary.
  ///
  /// - A starting block parameter (either `hash` or `height`)
  ///       may then be used to filter results to those occurring
  ///       after a certain time.
  ///
  /// This approach will reduce network traffic and response processing
  ///   for the client, as well as reduce workload on the node.
  /// </summary>
  public sealed partial class GetRawAddressTransactionsRequest : pb::IMessage<GetRawAddressTransactionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRawAddressTransactionsRequest> _parser = new pb::MessageParser<GetRawAddressTransactionsRequest>(() => new GetRawAddressTransactionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRawAddressTransactionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawAddressTransactionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawAddressTransactionsRequest(GetRawAddressTransactionsRequest other) : this() {
      address_ = other.address_;
      nbSkip_ = other.nbSkip_;
      nbFetch_ = other.nbFetch_;
      switch (other.StartBlockCase) {
        case StartBlockOneofCase.Hash:
          Hash = other.Hash;
          break;
        case StartBlockOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawAddressTransactionsRequest Clone() {
      return new GetRawAddressTransactionsRequest(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    /// <summary>
    /// The address to query transactions, in lowercase cashaddr format.
    /// The network prefix is optional (i.e. "cashaddress:").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nb_skip" field.</summary>
    public const int NbSkipFieldNumber = 2;
    private uint nbSkip_;
    /// <summary>
    /// The number of confirmed transactions to skip, starting with the oldest first.
    /// Does not affect results of unconfirmed transactions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NbSkip {
      get { return nbSkip_; }
      set {
        nbSkip_ = value;
      }
    }

    /// <summary>Field number for the "nb_fetch" field.</summary>
    public const int NbFetchFieldNumber = 3;
    private uint nbFetch_;
    /// <summary>
    /// Specify the number of transactions to fetch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint NbFetch {
      get { return nbFetch_; }
      set {
        nbFetch_ = value;
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 4;
    /// <summary>
    /// Recommended. Only return transactions after some starting block
    /// identified by hash, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return startBlockCase_ == StartBlockOneofCase.Hash ? (pb::ByteString) startBlock_ : pb::ByteString.Empty; }
      set {
        startBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        startBlockCase_ = StartBlockOneofCase.Hash;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 5;
    /// <summary>
    /// Recommended. Only return transactions after some starting block
    /// identified by block number.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return startBlockCase_ == StartBlockOneofCase.Height ? (int) startBlock_ : 0; }
      set {
        startBlock_ = value;
        startBlockCase_ = StartBlockOneofCase.Height;
      }
    }

    private object startBlock_;
    /// <summary>Enum of possible cases for the "start_block" oneof.</summary>
    public enum StartBlockOneofCase {
      None = 0,
      Hash = 4,
      Height = 5,
    }
    private StartBlockOneofCase startBlockCase_ = StartBlockOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartBlockOneofCase StartBlockCase {
      get { return startBlockCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStartBlock() {
      startBlockCase_ = StartBlockOneofCase.None;
      startBlock_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRawAddressTransactionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRawAddressTransactionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (NbSkip != other.NbSkip) return false;
      if (NbFetch != other.NbFetch) return false;
      if (Hash != other.Hash) return false;
      if (Height != other.Height) return false;
      if (StartBlockCase != other.StartBlockCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (NbSkip != 0) hash ^= NbSkip.GetHashCode();
      if (NbFetch != 0) hash ^= NbFetch.GetHashCode();
      if (startBlockCase_ == StartBlockOneofCase.Hash) hash ^= Hash.GetHashCode();
      if (startBlockCase_ == StartBlockOneofCase.Height) hash ^= Height.GetHashCode();
      hash ^= (int) startBlockCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (NbSkip != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NbSkip);
      }
      if (NbFetch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NbFetch);
      }
      if (startBlockCase_ == StartBlockOneofCase.Hash) {
        output.WriteRawTag(34);
        output.WriteBytes(Hash);
      }
      if (startBlockCase_ == StartBlockOneofCase.Height) {
        output.WriteRawTag(40);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (NbSkip != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NbSkip);
      }
      if (NbFetch != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(NbFetch);
      }
      if (startBlockCase_ == StartBlockOneofCase.Hash) {
        output.WriteRawTag(34);
        output.WriteBytes(Hash);
      }
      if (startBlockCase_ == StartBlockOneofCase.Height) {
        output.WriteRawTag(40);
        output.WriteInt32(Height);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (NbSkip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbSkip);
      }
      if (NbFetch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NbFetch);
      }
      if (startBlockCase_ == StartBlockOneofCase.Hash) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (startBlockCase_ == StartBlockOneofCase.Height) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRawAddressTransactionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.NbSkip != 0) {
        NbSkip = other.NbSkip;
      }
      if (other.NbFetch != 0) {
        NbFetch = other.NbFetch;
      }
      switch (other.StartBlockCase) {
        case StartBlockOneofCase.Hash:
          Hash = other.Hash;
          break;
        case StartBlockOneofCase.Height:
          Height = other.Height;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            NbSkip = input.ReadUInt32();
            break;
          }
          case 24: {
            NbFetch = input.ReadUInt32();
            break;
          }
          case 34: {
            Hash = input.ReadBytes();
            break;
          }
          case 40: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            NbSkip = input.ReadUInt32();
            break;
          }
          case 24: {
            NbFetch = input.ReadUInt32();
            break;
          }
          case 34: {
            Hash = input.ReadBytes();
            break;
          }
          case 40: {
            Height = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetRawAddressTransactionsResponse : pb::IMessage<GetRawAddressTransactionsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetRawAddressTransactionsResponse> _parser = new pb::MessageParser<GetRawAddressTransactionsResponse>(() => new GetRawAddressTransactionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRawAddressTransactionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawAddressTransactionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawAddressTransactionsResponse(GetRawAddressTransactionsResponse other) : this() {
      confirmedTransactions_ = other.confirmedTransactions_.Clone();
      unconfirmedTransactions_ = other.unconfirmedTransactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRawAddressTransactionsResponse Clone() {
      return new GetRawAddressTransactionsResponse(this);
    }

    /// <summary>Field number for the "confirmed_transactions" field.</summary>
    public const int ConfirmedTransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_confirmedTransactions_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> confirmedTransactions_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// Transactions that have been included in a block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ConfirmedTransactions {
      get { return confirmedTransactions_; }
    }

    /// <summary>Field number for the "unconfirmed_transactions" field.</summary>
    public const int UnconfirmedTransactionsFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_unconfirmedTransactions_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> unconfirmedTransactions_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// Transactions in mempool which have not been included in a block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> UnconfirmedTransactions {
      get { return unconfirmedTransactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRawAddressTransactionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRawAddressTransactionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!confirmedTransactions_.Equals(other.confirmedTransactions_)) return false;
      if(!unconfirmedTransactions_.Equals(other.unconfirmedTransactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= confirmedTransactions_.GetHashCode();
      hash ^= unconfirmedTransactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      confirmedTransactions_.WriteTo(output, _repeated_confirmedTransactions_codec);
      unconfirmedTransactions_.WriteTo(output, _repeated_unconfirmedTransactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      confirmedTransactions_.WriteTo(ref output, _repeated_confirmedTransactions_codec);
      unconfirmedTransactions_.WriteTo(ref output, _repeated_unconfirmedTransactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += confirmedTransactions_.CalculateSize(_repeated_confirmedTransactions_codec);
      size += unconfirmedTransactions_.CalculateSize(_repeated_unconfirmedTransactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRawAddressTransactionsResponse other) {
      if (other == null) {
        return;
      }
      confirmedTransactions_.Add(other.confirmedTransactions_);
      unconfirmedTransactions_.Add(other.unconfirmedTransactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            confirmedTransactions_.AddEntriesFrom(input, _repeated_confirmedTransactions_codec);
            break;
          }
          case 18: {
            unconfirmedTransactions_.AddEntriesFrom(input, _repeated_unconfirmedTransactions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            confirmedTransactions_.AddEntriesFrom(ref input, _repeated_confirmedTransactions_codec);
            break;
          }
          case 18: {
            unconfirmedTransactions_.AddEntriesFrom(ref input, _repeated_unconfirmedTransactions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetAddressUnspentOutputsRequest : pb::IMessage<GetAddressUnspentOutputsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAddressUnspentOutputsRequest> _parser = new pb::MessageParser<GetAddressUnspentOutputsRequest>(() => new GetAddressUnspentOutputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAddressUnspentOutputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressUnspentOutputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressUnspentOutputsRequest(GetAddressUnspentOutputsRequest other) : this() {
      address_ = other.address_;
      includeMempool_ = other.includeMempool_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressUnspentOutputsRequest Clone() {
      return new GetAddressUnspentOutputsRequest(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    /// <summary>
    /// The address to query transactions, in lowercase cashaddr format.
    /// The network identifier is optional (i.e. "cashaddress:").
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "include_mempool" field.</summary>
    public const int IncludeMempoolFieldNumber = 2;
    private bool includeMempool_;
    /// <summary>
    /// When `include_mempool` is true, unconfirmed transactions from mempool
    /// are returned. Default is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeMempool {
      get { return includeMempool_; }
      set {
        includeMempool_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAddressUnspentOutputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAddressUnspentOutputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (IncludeMempool != other.IncludeMempool) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (IncludeMempool != false) hash ^= IncludeMempool.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (IncludeMempool != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeMempool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (IncludeMempool != false) {
        output.WriteRawTag(16);
        output.WriteBool(IncludeMempool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (IncludeMempool != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAddressUnspentOutputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.IncludeMempool != false) {
        IncludeMempool = other.IncludeMempool;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            IncludeMempool = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            IncludeMempool = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetAddressUnspentOutputsResponse : pb::IMessage<GetAddressUnspentOutputsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetAddressUnspentOutputsResponse> _parser = new pb::MessageParser<GetAddressUnspentOutputsResponse>(() => new GetAddressUnspentOutputsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAddressUnspentOutputsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressUnspentOutputsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressUnspentOutputsResponse(GetAddressUnspentOutputsResponse other) : this() {
      outputs_ = other.outputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAddressUnspentOutputsResponse Clone() {
      return new GetAddressUnspentOutputsResponse(this);
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Pb.UnspentOutput> _repeated_outputs_codec
        = pb::FieldCodec.ForMessage(10, global::Pb.UnspentOutput.Parser);
    private readonly pbc::RepeatedField<global::Pb.UnspentOutput> outputs_ = new pbc::RepeatedField<global::Pb.UnspentOutput>();
    /// <summary>
    /// List of unspent outputs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pb.UnspentOutput> Outputs {
      get { return outputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAddressUnspentOutputsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAddressUnspentOutputsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!outputs_.Equals(other.outputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= outputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      outputs_.WriteTo(output, _repeated_outputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      outputs_.WriteTo(ref output, _repeated_outputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += outputs_.CalculateSize(_repeated_outputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAddressUnspentOutputsResponse other) {
      if (other == null) {
        return;
      }
      outputs_.Add(other.outputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            outputs_.AddEntriesFrom(input, _repeated_outputs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            outputs_.AddEntriesFrom(ref input, _repeated_outputs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUnspentOutputRequest : pb::IMessage<GetUnspentOutputRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUnspentOutputRequest> _parser = new pb::MessageParser<GetUnspentOutputRequest>(() => new GetUnspentOutputRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUnspentOutputRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnspentOutputRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnspentOutputRequest(GetUnspentOutputRequest other) : this() {
      hash_ = other.hash_;
      index_ = other.index_;
      includeMempool_ = other.includeMempool_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnspentOutputRequest Clone() {
      return new GetUnspentOutputRequest(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    /// <summary>
    /// The hash of the transaction, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private uint index_;
    /// <summary>
    /// The number of the output, starting from zero.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "include_mempool" field.</summary>
    public const int IncludeMempoolFieldNumber = 3;
    private bool includeMempool_;
    /// <summary>
    /// When include_mempool is true, unconfirmed transactions from mempool
    /// are returned. Default is false.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeMempool {
      get { return includeMempool_; }
      set {
        includeMempool_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUnspentOutputRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUnspentOutputRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (Index != other.Index) return false;
      if (IncludeMempool != other.IncludeMempool) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (IncludeMempool != false) hash ^= IncludeMempool.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Index);
      }
      if (IncludeMempool != false) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeMempool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Index);
      }
      if (IncludeMempool != false) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeMempool);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
      }
      if (IncludeMempool != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUnspentOutputRequest other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.IncludeMempool != false) {
        IncludeMempool = other.IncludeMempool;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Index = input.ReadUInt32();
            break;
          }
          case 24: {
            IncludeMempool = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Index = input.ReadUInt32();
            break;
          }
          case 24: {
            IncludeMempool = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetUnspentOutputResponse : pb::IMessage<GetUnspentOutputResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetUnspentOutputResponse> _parser = new pb::MessageParser<GetUnspentOutputResponse>(() => new GetUnspentOutputResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUnspentOutputResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnspentOutputResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnspentOutputResponse(GetUnspentOutputResponse other) : this() {
      outpoint_ = other.outpoint_ != null ? other.outpoint_.Clone() : null;
      pubkeyScript_ = other.pubkeyScript_;
      value_ = other.value_;
      isCoinbase_ = other.isCoinbase_;
      blockHeight_ = other.blockHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUnspentOutputResponse Clone() {
      return new GetUnspentOutputResponse(this);
    }

    /// <summary>Field number for the "outpoint" field.</summary>
    public const int OutpointFieldNumber = 1;
    private global::Pb.Transaction.Types.Input.Types.Outpoint outpoint_;
    /// <summary>
    /// A reference to the related input.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.Transaction.Types.Input.Types.Outpoint Outpoint {
      get { return outpoint_; }
      set {
        outpoint_ = value;
      }
    }

    /// <summary>Field number for the "pubkey_script" field.</summary>
    public const int PubkeyScriptFieldNumber = 2;
    private pb::ByteString pubkeyScript_ = pb::ByteString.Empty;
    /// <summary>
    /// Locking script dictating how funds can be spent in the future
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PubkeyScript {
      get { return pubkeyScript_; }
      set {
        pubkeyScript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private long value_;
    /// <summary>
    /// Amount in satoshi.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "is_coinbase" field.</summary>
    public const int IsCoinbaseFieldNumber = 4;
    private bool isCoinbase_;
    /// <summary>
    /// When is_coinbase is true, the transaction was the first in a block,
    /// created by a miner, and used to pay the block reward
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCoinbase {
      get { return isCoinbase_; }
      set {
        isCoinbase_ = value;
      }
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 5;
    private int blockHeight_;
    /// <summary>
    /// The index number of the block containing the transaction creating the output.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUnspentOutputResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUnspentOutputResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Outpoint, other.Outpoint)) return false;
      if (PubkeyScript != other.PubkeyScript) return false;
      if (Value != other.Value) return false;
      if (IsCoinbase != other.IsCoinbase) return false;
      if (BlockHeight != other.BlockHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (outpoint_ != null) hash ^= Outpoint.GetHashCode();
      if (PubkeyScript.Length != 0) hash ^= PubkeyScript.GetHashCode();
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (IsCoinbase != false) hash ^= IsCoinbase.GetHashCode();
      if (BlockHeight != 0) hash ^= BlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (outpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Outpoint);
      }
      if (PubkeyScript.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PubkeyScript);
      }
      if (Value != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Value);
      }
      if (IsCoinbase != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsCoinbase);
      }
      if (BlockHeight != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (outpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Outpoint);
      }
      if (PubkeyScript.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PubkeyScript);
      }
      if (Value != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Value);
      }
      if (IsCoinbase != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsCoinbase);
      }
      if (BlockHeight != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (outpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Outpoint);
      }
      if (PubkeyScript.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PubkeyScript);
      }
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (IsCoinbase != false) {
        size += 1 + 1;
      }
      if (BlockHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUnspentOutputResponse other) {
      if (other == null) {
        return;
      }
      if (other.outpoint_ != null) {
        if (outpoint_ == null) {
          Outpoint = new global::Pb.Transaction.Types.Input.Types.Outpoint();
        }
        Outpoint.MergeFrom(other.Outpoint);
      }
      if (other.PubkeyScript.Length != 0) {
        PubkeyScript = other.PubkeyScript;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      if (other.IsCoinbase != false) {
        IsCoinbase = other.IsCoinbase;
      }
      if (other.BlockHeight != 0) {
        BlockHeight = other.BlockHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (outpoint_ == null) {
              Outpoint = new global::Pb.Transaction.Types.Input.Types.Outpoint();
            }
            input.ReadMessage(Outpoint);
            break;
          }
          case 18: {
            PubkeyScript = input.ReadBytes();
            break;
          }
          case 24: {
            Value = input.ReadInt64();
            break;
          }
          case 32: {
            IsCoinbase = input.ReadBool();
            break;
          }
          case 40: {
            BlockHeight = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (outpoint_ == null) {
              Outpoint = new global::Pb.Transaction.Types.Input.Types.Outpoint();
            }
            input.ReadMessage(Outpoint);
            break;
          }
          case 18: {
            PubkeyScript = input.ReadBytes();
            break;
          }
          case 24: {
            Value = input.ReadInt64();
            break;
          }
          case 32: {
            IsCoinbase = input.ReadBool();
            break;
          }
          case 40: {
            BlockHeight = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetMerkleProofRequest : pb::IMessage<GetMerkleProofRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMerkleProofRequest> _parser = new pb::MessageParser<GetMerkleProofRequest>(() => new GetMerkleProofRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMerkleProofRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleProofRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleProofRequest(GetMerkleProofRequest other) : this() {
      transactionHash_ = other.transactionHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleProofRequest Clone() {
      return new GetMerkleProofRequest(this);
    }

    /// <summary>Field number for the "transaction_hash" field.</summary>
    public const int TransactionHashFieldNumber = 1;
    private pb::ByteString transactionHash_ = pb::ByteString.Empty;
    /// <summary>
    /// A transaction hash, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransactionHash {
      get { return transactionHash_; }
      set {
        transactionHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMerkleProofRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMerkleProofRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionHash != other.TransactionHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionHash.Length != 0) hash ^= TransactionHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TransactionHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TransactionHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TransactionHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TransactionHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransactionHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMerkleProofRequest other) {
      if (other == null) {
        return;
      }
      if (other.TransactionHash.Length != 0) {
        TransactionHash = other.TransactionHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionHash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TransactionHash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetMerkleProofResponse : pb::IMessage<GetMerkleProofResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMerkleProofResponse> _parser = new pb::MessageParser<GetMerkleProofResponse>(() => new GetMerkleProofResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetMerkleProofResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleProofResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleProofResponse(GetMerkleProofResponse other) : this() {
      block_ = other.block_ != null ? other.block_.Clone() : null;
      hashes_ = other.hashes_.Clone();
      flags_ = other.flags_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetMerkleProofResponse Clone() {
      return new GetMerkleProofResponse(this);
    }

    /// <summary>Field number for the "block" field.</summary>
    public const int BlockFieldNumber = 1;
    private global::Pb.BlockInfo block_;
    /// <summary>
    /// Block header information for the corresponding transaction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.BlockInfo Block {
      get { return block_; }
      set {
        block_ = value;
      }
    }

    /// <summary>Field number for the "hashes" field.</summary>
    public const int HashesFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_hashes_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> hashes_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// A list containing the transaction hash, the adjacent leaf transaction hash
    /// and the hashes of the highest nodes in the merkle tree not built with the transaction.
    /// Proof hashes are ordered following transaction order, or left to right on the merkle tree
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Hashes {
      get { return hashes_; }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 3;
    private pb::ByteString flags_ = pb::ByteString.Empty;
    /// <summary>
    /// Binary representing the location of the matching transaction in the full merkle tree,
    /// starting with the root (`1`) at position/level 0, where `1` corresponds
    /// to a left branch and `01` is a right branch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Flags {
      get { return flags_; }
      set {
        flags_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetMerkleProofResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetMerkleProofResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Block, other.Block)) return false;
      if(!hashes_.Equals(other.hashes_)) return false;
      if (Flags != other.Flags) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (block_ != null) hash ^= Block.GetHashCode();
      hash ^= hashes_.GetHashCode();
      if (Flags.Length != 0) hash ^= Flags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (block_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Block);
      }
      hashes_.WriteTo(output, _repeated_hashes_codec);
      if (Flags.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (block_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Block);
      }
      hashes_.WriteTo(ref output, _repeated_hashes_codec);
      if (Flags.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Flags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (block_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Block);
      }
      size += hashes_.CalculateSize(_repeated_hashes_codec);
      if (Flags.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Flags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetMerkleProofResponse other) {
      if (other == null) {
        return;
      }
      if (other.block_ != null) {
        if (block_ == null) {
          Block = new global::Pb.BlockInfo();
        }
        Block.MergeFrom(other.Block);
      }
      hashes_.Add(other.hashes_);
      if (other.Flags.Length != 0) {
        Flags = other.Flags;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (block_ == null) {
              Block = new global::Pb.BlockInfo();
            }
            input.ReadMessage(Block);
            break;
          }
          case 18: {
            hashes_.AddEntriesFrom(input, _repeated_hashes_codec);
            break;
          }
          case 26: {
            Flags = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (block_ == null) {
              Block = new global::Pb.BlockInfo();
            }
            input.ReadMessage(Block);
            break;
          }
          case 18: {
            hashes_.AddEntriesFrom(ref input, _repeated_hashes_codec);
            break;
          }
          case 26: {
            Flags = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SubmitTransactionRequest : pb::IMessage<SubmitTransactionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubmitTransactionRequest> _parser = new pb::MessageParser<SubmitTransactionRequest>(() => new SubmitTransactionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitTransactionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionRequest(SubmitTransactionRequest other) : this() {
      transaction_ = other.transaction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionRequest Clone() {
      return new SubmitTransactionRequest(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private pb::ByteString transaction_ = pb::ByteString.Empty;
    /// <summary>
    /// The encoded transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Transaction {
      get { return transaction_; }
      set {
        transaction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitTransactionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitTransactionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Transaction != other.Transaction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Transaction.Length != 0) hash ^= Transaction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Transaction.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Transaction.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Transaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Transaction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Transaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitTransactionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Transaction.Length != 0) {
        Transaction = other.Transaction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Transaction = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Transaction = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SubmitTransactionResponse : pb::IMessage<SubmitTransactionResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubmitTransactionResponse> _parser = new pb::MessageParser<SubmitTransactionResponse>(() => new SubmitTransactionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitTransactionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionResponse(SubmitTransactionResponse other) : this() {
      hash_ = other.hash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitTransactionResponse Clone() {
      return new SubmitTransactionResponse(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    /// <summary>
    /// Transaction hash, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitTransactionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitTransactionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitTransactionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to subscribe or unsubscribe from a stream of transactions.
  /// </summary>
  public sealed partial class SubscribeTransactionsRequest : pb::IMessage<SubscribeTransactionsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeTransactionsRequest> _parser = new pb::MessageParser<SubscribeTransactionsRequest>(() => new SubscribeTransactionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeTransactionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeTransactionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeTransactionsRequest(SubscribeTransactionsRequest other) : this() {
      subscribe_ = other.subscribe_ != null ? other.subscribe_.Clone() : null;
      unsubscribe_ = other.unsubscribe_ != null ? other.unsubscribe_.Clone() : null;
      includeMempool_ = other.includeMempool_;
      includeInBlock_ = other.includeInBlock_;
      serializeTx_ = other.serializeTx_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeTransactionsRequest Clone() {
      return new SubscribeTransactionsRequest(this);
    }

    /// <summary>Field number for the "subscribe" field.</summary>
    public const int SubscribeFieldNumber = 1;
    private global::Pb.TransactionFilter subscribe_;
    /// <summary>
    /// Subscribe to a filter. add items to a filter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.TransactionFilter Subscribe {
      get { return subscribe_; }
      set {
        subscribe_ = value;
      }
    }

    /// <summary>Field number for the "unsubscribe" field.</summary>
    public const int UnsubscribeFieldNumber = 2;
    private global::Pb.TransactionFilter unsubscribe_;
    /// <summary>
    /// Unsubscribe to a filter, remove items from a filter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.TransactionFilter Unsubscribe {
      get { return unsubscribe_; }
      set {
        unsubscribe_ = value;
      }
    }

    /// <summary>Field number for the "include_mempool" field.</summary>
    public const int IncludeMempoolFieldNumber = 3;
    private bool includeMempool_;
    /// <summary>
    /// When include_mempool is true, new unconfirmed transactions from mempool are
    /// included apart from the ones confirmed in a block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeMempool {
      get { return includeMempool_; }
      set {
        includeMempool_ = value;
      }
    }

    /// <summary>Field number for the "include_in_block" field.</summary>
    public const int IncludeInBlockFieldNumber = 4;
    private bool includeInBlock_;
    /// <summary>
    /// When include_in_block is true, transactions are included when they are confirmed.
    /// This notification is sent in addition to any requested mempool notifications.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludeInBlock {
      get { return includeInBlock_; }
      set {
        includeInBlock_ = value;
      }
    }

    /// <summary>Field number for the "serialize_tx" field.</summary>
    public const int SerializeTxFieldNumber = 5;
    private bool serializeTx_;
    /// <summary>
    /// When serialize_tx is true, transactions are serialized using
    /// bitcoin protocol encoding. Default is false, transaction will be Marshaled
    /// (see `Transaction`, `MempoolTransaction` and `TransactionNotification`)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SerializeTx {
      get { return serializeTx_; }
      set {
        serializeTx_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeTransactionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeTransactionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Subscribe, other.Subscribe)) return false;
      if (!object.Equals(Unsubscribe, other.Unsubscribe)) return false;
      if (IncludeMempool != other.IncludeMempool) return false;
      if (IncludeInBlock != other.IncludeInBlock) return false;
      if (SerializeTx != other.SerializeTx) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subscribe_ != null) hash ^= Subscribe.GetHashCode();
      if (unsubscribe_ != null) hash ^= Unsubscribe.GetHashCode();
      if (IncludeMempool != false) hash ^= IncludeMempool.GetHashCode();
      if (IncludeInBlock != false) hash ^= IncludeInBlock.GetHashCode();
      if (SerializeTx != false) hash ^= SerializeTx.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (subscribe_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Subscribe);
      }
      if (unsubscribe_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Unsubscribe);
      }
      if (IncludeMempool != false) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeMempool);
      }
      if (IncludeInBlock != false) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeInBlock);
      }
      if (SerializeTx != false) {
        output.WriteRawTag(40);
        output.WriteBool(SerializeTx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (subscribe_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Subscribe);
      }
      if (unsubscribe_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Unsubscribe);
      }
      if (IncludeMempool != false) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeMempool);
      }
      if (IncludeInBlock != false) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeInBlock);
      }
      if (SerializeTx != false) {
        output.WriteRawTag(40);
        output.WriteBool(SerializeTx);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subscribe_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subscribe);
      }
      if (unsubscribe_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unsubscribe);
      }
      if (IncludeMempool != false) {
        size += 1 + 1;
      }
      if (IncludeInBlock != false) {
        size += 1 + 1;
      }
      if (SerializeTx != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeTransactionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.subscribe_ != null) {
        if (subscribe_ == null) {
          Subscribe = new global::Pb.TransactionFilter();
        }
        Subscribe.MergeFrom(other.Subscribe);
      }
      if (other.unsubscribe_ != null) {
        if (unsubscribe_ == null) {
          Unsubscribe = new global::Pb.TransactionFilter();
        }
        Unsubscribe.MergeFrom(other.Unsubscribe);
      }
      if (other.IncludeMempool != false) {
        IncludeMempool = other.IncludeMempool;
      }
      if (other.IncludeInBlock != false) {
        IncludeInBlock = other.IncludeInBlock;
      }
      if (other.SerializeTx != false) {
        SerializeTx = other.SerializeTx;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (subscribe_ == null) {
              Subscribe = new global::Pb.TransactionFilter();
            }
            input.ReadMessage(Subscribe);
            break;
          }
          case 18: {
            if (unsubscribe_ == null) {
              Unsubscribe = new global::Pb.TransactionFilter();
            }
            input.ReadMessage(Unsubscribe);
            break;
          }
          case 24: {
            IncludeMempool = input.ReadBool();
            break;
          }
          case 32: {
            IncludeInBlock = input.ReadBool();
            break;
          }
          case 40: {
            SerializeTx = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (subscribe_ == null) {
              Subscribe = new global::Pb.TransactionFilter();
            }
            input.ReadMessage(Subscribe);
            break;
          }
          case 18: {
            if (unsubscribe_ == null) {
              Unsubscribe = new global::Pb.TransactionFilter();
            }
            input.ReadMessage(Unsubscribe);
            break;
          }
          case 24: {
            IncludeMempool = input.ReadBool();
            break;
          }
          case 32: {
            IncludeInBlock = input.ReadBool();
            break;
          }
          case 40: {
            SerializeTx = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Options to define data structure to be sent by SubscribeBlock stream:
  ///
  ///  - BlockInfo (block metadata): `BlockInfo`
  ///      - SubscribeBlocksRequest {}
  ///
  ///  - Marshaled Block (with transaction hashes): `Block`
  ///      - SubscribeBlocksRequest {
  ///            full_block = true
  ///        }
  ///  - Marshaled Block (with full transaction data): `Block`
  ///      - SubscribeBlocksRequest {
  ///            full_block = true
  ///            full_transactions = true
  ///        }
  ///  - Serialized Block acccording to bitcoin protocol encoding: `bytes`
  ///      - SubscribeBlocksRequest {
  ///            serialize_block = true
  ///        }
  /// </summary>
  public sealed partial class SubscribeBlocksRequest : pb::IMessage<SubscribeBlocksRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeBlocksRequest> _parser = new pb::MessageParser<SubscribeBlocksRequest>(() => new SubscribeBlocksRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeBlocksRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeBlocksRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeBlocksRequest(SubscribeBlocksRequest other) : this() {
      fullBlock_ = other.fullBlock_;
      fullTransactions_ = other.fullTransactions_;
      serializeBlock_ = other.serializeBlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeBlocksRequest Clone() {
      return new SubscribeBlocksRequest(this);
    }

    /// <summary>Field number for the "full_block" field.</summary>
    public const int FullBlockFieldNumber = 1;
    private bool fullBlock_;
    /// <summary>
    /// When full_block is true, a complete marshaled block is sent. See `Block`.
    /// Default is false, block metadata is sent. See `BlockInfo`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FullBlock {
      get { return fullBlock_; }
      set {
        fullBlock_ = value;
      }
    }

    /// <summary>Field number for the "full_transactions" field.</summary>
    public const int FullTransactionsFieldNumber = 2;
    private bool fullTransactions_;
    /// <summary>
    /// When full_transactions is true, provide full transaction info
    /// for a marshaled block.
    /// Default is false, only the transaction hashes are included for
    /// a marshaled block. See `TransactionData`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FullTransactions {
      get { return fullTransactions_; }
      set {
        fullTransactions_ = value;
      }
    }

    /// <summary>Field number for the "serialize_block" field.</summary>
    public const int SerializeBlockFieldNumber = 3;
    private bool serializeBlock_;
    /// <summary>
    /// When serialize_block is true, blocks are serialized using bitcoin protocol encoding.
    /// Default is false, block will be Marshaled (see `BlockInfo` and `BlockNotification`)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SerializeBlock {
      get { return serializeBlock_; }
      set {
        serializeBlock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeBlocksRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeBlocksRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FullBlock != other.FullBlock) return false;
      if (FullTransactions != other.FullTransactions) return false;
      if (SerializeBlock != other.SerializeBlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FullBlock != false) hash ^= FullBlock.GetHashCode();
      if (FullTransactions != false) hash ^= FullTransactions.GetHashCode();
      if (SerializeBlock != false) hash ^= SerializeBlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FullBlock != false) {
        output.WriteRawTag(8);
        output.WriteBool(FullBlock);
      }
      if (FullTransactions != false) {
        output.WriteRawTag(16);
        output.WriteBool(FullTransactions);
      }
      if (SerializeBlock != false) {
        output.WriteRawTag(24);
        output.WriteBool(SerializeBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FullBlock != false) {
        output.WriteRawTag(8);
        output.WriteBool(FullBlock);
      }
      if (FullTransactions != false) {
        output.WriteRawTag(16);
        output.WriteBool(FullTransactions);
      }
      if (SerializeBlock != false) {
        output.WriteRawTag(24);
        output.WriteBool(SerializeBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FullBlock != false) {
        size += 1 + 1;
      }
      if (FullTransactions != false) {
        size += 1 + 1;
      }
      if (SerializeBlock != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeBlocksRequest other) {
      if (other == null) {
        return;
      }
      if (other.FullBlock != false) {
        FullBlock = other.FullBlock;
      }
      if (other.FullTransactions != false) {
        FullTransactions = other.FullTransactions;
      }
      if (other.SerializeBlock != false) {
        SerializeBlock = other.SerializeBlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FullBlock = input.ReadBool();
            break;
          }
          case 16: {
            FullTransactions = input.ReadBool();
            break;
          }
          case 24: {
            SerializeBlock = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FullBlock = input.ReadBool();
            break;
          }
          case 16: {
            FullTransactions = input.ReadBool();
            break;
          }
          case 24: {
            SerializeBlock = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BlockNotification : pb::IMessage<BlockNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BlockNotification> _parser = new pb::MessageParser<BlockNotification>(() => new BlockNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockNotification(BlockNotification other) : this() {
      type_ = other.type_;
      switch (other.BlockCase) {
        case BlockOneofCase.BlockInfo:
          BlockInfo = other.BlockInfo.Clone();
          break;
        case BlockOneofCase.MarshaledBlock:
          MarshaledBlock = other.MarshaledBlock.Clone();
          break;
        case BlockOneofCase.SerializedBlock:
          SerializedBlock = other.SerializedBlock;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockNotification Clone() {
      return new BlockNotification(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Pb.BlockNotification.Types.Type type_ = global::Pb.BlockNotification.Types.Type.Connected;
    /// <summary>
    /// Whether the block is connected to the chain.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.BlockNotification.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "block_info" field.</summary>
    public const int BlockInfoFieldNumber = 2;
    /// <summary>
    /// Marshaled block header data, as well as metadata stored by the node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.BlockInfo BlockInfo {
      get { return blockCase_ == BlockOneofCase.BlockInfo ? (global::Pb.BlockInfo) block_ : null; }
      set {
        block_ = value;
        blockCase_ = value == null ? BlockOneofCase.None : BlockOneofCase.BlockInfo;
      }
    }

    /// <summary>Field number for the "marshaled_block" field.</summary>
    public const int MarshaledBlockFieldNumber = 3;
    /// <summary>
    /// A Block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.Block MarshaledBlock {
      get { return blockCase_ == BlockOneofCase.MarshaledBlock ? (global::Pb.Block) block_ : null; }
      set {
        block_ = value;
        blockCase_ = value == null ? BlockOneofCase.None : BlockOneofCase.MarshaledBlock;
      }
    }

    /// <summary>Field number for the "serialized_block" field.</summary>
    public const int SerializedBlockFieldNumber = 4;
    /// <summary>
    /// Binary block, serialized using bitcoin protocol encoding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SerializedBlock {
      get { return blockCase_ == BlockOneofCase.SerializedBlock ? (pb::ByteString) block_ : pb::ByteString.Empty; }
      set {
        block_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        blockCase_ = BlockOneofCase.SerializedBlock;
      }
    }

    private object block_;
    /// <summary>Enum of possible cases for the "block" oneof.</summary>
    public enum BlockOneofCase {
      None = 0,
      BlockInfo = 2,
      MarshaledBlock = 3,
      SerializedBlock = 4,
    }
    private BlockOneofCase blockCase_ = BlockOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockOneofCase BlockCase {
      get { return blockCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBlock() {
      blockCase_ = BlockOneofCase.None;
      block_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(BlockInfo, other.BlockInfo)) return false;
      if (!object.Equals(MarshaledBlock, other.MarshaledBlock)) return false;
      if (SerializedBlock != other.SerializedBlock) return false;
      if (BlockCase != other.BlockCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Pb.BlockNotification.Types.Type.Connected) hash ^= Type.GetHashCode();
      if (blockCase_ == BlockOneofCase.BlockInfo) hash ^= BlockInfo.GetHashCode();
      if (blockCase_ == BlockOneofCase.MarshaledBlock) hash ^= MarshaledBlock.GetHashCode();
      if (blockCase_ == BlockOneofCase.SerializedBlock) hash ^= SerializedBlock.GetHashCode();
      hash ^= (int) blockCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Pb.BlockNotification.Types.Type.Connected) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (blockCase_ == BlockOneofCase.BlockInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(BlockInfo);
      }
      if (blockCase_ == BlockOneofCase.MarshaledBlock) {
        output.WriteRawTag(26);
        output.WriteMessage(MarshaledBlock);
      }
      if (blockCase_ == BlockOneofCase.SerializedBlock) {
        output.WriteRawTag(34);
        output.WriteBytes(SerializedBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Pb.BlockNotification.Types.Type.Connected) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (blockCase_ == BlockOneofCase.BlockInfo) {
        output.WriteRawTag(18);
        output.WriteMessage(BlockInfo);
      }
      if (blockCase_ == BlockOneofCase.MarshaledBlock) {
        output.WriteRawTag(26);
        output.WriteMessage(MarshaledBlock);
      }
      if (blockCase_ == BlockOneofCase.SerializedBlock) {
        output.WriteRawTag(34);
        output.WriteBytes(SerializedBlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Pb.BlockNotification.Types.Type.Connected) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (blockCase_ == BlockOneofCase.BlockInfo) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockInfo);
      }
      if (blockCase_ == BlockOneofCase.MarshaledBlock) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MarshaledBlock);
      }
      if (blockCase_ == BlockOneofCase.SerializedBlock) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SerializedBlock);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockNotification other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Pb.BlockNotification.Types.Type.Connected) {
        Type = other.Type;
      }
      switch (other.BlockCase) {
        case BlockOneofCase.BlockInfo:
          if (BlockInfo == null) {
            BlockInfo = new global::Pb.BlockInfo();
          }
          BlockInfo.MergeFrom(other.BlockInfo);
          break;
        case BlockOneofCase.MarshaledBlock:
          if (MarshaledBlock == null) {
            MarshaledBlock = new global::Pb.Block();
          }
          MarshaledBlock.MergeFrom(other.MarshaledBlock);
          break;
        case BlockOneofCase.SerializedBlock:
          SerializedBlock = other.SerializedBlock;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Pb.BlockNotification.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Pb.BlockInfo subBuilder = new global::Pb.BlockInfo();
            if (blockCase_ == BlockOneofCase.BlockInfo) {
              subBuilder.MergeFrom(BlockInfo);
            }
            input.ReadMessage(subBuilder);
            BlockInfo = subBuilder;
            break;
          }
          case 26: {
            global::Pb.Block subBuilder = new global::Pb.Block();
            if (blockCase_ == BlockOneofCase.MarshaledBlock) {
              subBuilder.MergeFrom(MarshaledBlock);
            }
            input.ReadMessage(subBuilder);
            MarshaledBlock = subBuilder;
            break;
          }
          case 34: {
            SerializedBlock = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Pb.BlockNotification.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Pb.BlockInfo subBuilder = new global::Pb.BlockInfo();
            if (blockCase_ == BlockOneofCase.BlockInfo) {
              subBuilder.MergeFrom(BlockInfo);
            }
            input.ReadMessage(subBuilder);
            BlockInfo = subBuilder;
            break;
          }
          case 26: {
            global::Pb.Block subBuilder = new global::Pb.Block();
            if (blockCase_ == BlockOneofCase.MarshaledBlock) {
              subBuilder.MergeFrom(MarshaledBlock);
            }
            input.ReadMessage(subBuilder);
            MarshaledBlock = subBuilder;
            break;
          }
          case 34: {
            SerializedBlock = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the BlockNotification message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// State of the block in relation to the chain.
      /// </summary>
      public enum Type {
        [pbr::OriginalName("CONNECTED")] Connected = 0,
        [pbr::OriginalName("DISCONNECTED")] Disconnected = 1,
      }

    }
    #endregion

  }

  public sealed partial class TransactionNotification : pb::IMessage<TransactionNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransactionNotification> _parser = new pb::MessageParser<TransactionNotification>(() => new TransactionNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionNotification(TransactionNotification other) : this() {
      type_ = other.type_;
      switch (other.TransactionCase) {
        case TransactionOneofCase.ConfirmedTransaction:
          ConfirmedTransaction = other.ConfirmedTransaction.Clone();
          break;
        case TransactionOneofCase.UnconfirmedTransaction:
          UnconfirmedTransaction = other.UnconfirmedTransaction.Clone();
          break;
        case TransactionOneofCase.SerializedTransaction:
          SerializedTransaction = other.SerializedTransaction;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionNotification Clone() {
      return new TransactionNotification(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Pb.TransactionNotification.Types.Type type_ = global::Pb.TransactionNotification.Types.Type.Unconfirmed;
    /// <summary>
    /// Whether or not the transaction has been included in a block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.TransactionNotification.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "confirmed_transaction" field.</summary>
    public const int ConfirmedTransactionFieldNumber = 2;
    /// <summary>
    /// A transaction included in a block.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.Transaction ConfirmedTransaction {
      get { return transactionCase_ == TransactionOneofCase.ConfirmedTransaction ? (global::Pb.Transaction) transaction_ : null; }
      set {
        transaction_ = value;
        transactionCase_ = value == null ? TransactionOneofCase.None : TransactionOneofCase.ConfirmedTransaction;
      }
    }

    /// <summary>Field number for the "unconfirmed_transaction" field.</summary>
    public const int UnconfirmedTransactionFieldNumber = 3;
    /// <summary>
    /// A transaction in mempool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.MempoolTransaction UnconfirmedTransaction {
      get { return transactionCase_ == TransactionOneofCase.UnconfirmedTransaction ? (global::Pb.MempoolTransaction) transaction_ : null; }
      set {
        transaction_ = value;
        transactionCase_ = value == null ? TransactionOneofCase.None : TransactionOneofCase.UnconfirmedTransaction;
      }
    }

    /// <summary>Field number for the "serialized_transaction" field.</summary>
    public const int SerializedTransactionFieldNumber = 4;
    /// <summary>
    /// Binary transaction, serialized using bitcoin protocol encoding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString SerializedTransaction {
      get { return transactionCase_ == TransactionOneofCase.SerializedTransaction ? (pb::ByteString) transaction_ : pb::ByteString.Empty; }
      set {
        transaction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        transactionCase_ = TransactionOneofCase.SerializedTransaction;
      }
    }

    private object transaction_;
    /// <summary>Enum of possible cases for the "transaction" oneof.</summary>
    public enum TransactionOneofCase {
      None = 0,
      ConfirmedTransaction = 2,
      UnconfirmedTransaction = 3,
      SerializedTransaction = 4,
    }
    private TransactionOneofCase transactionCase_ = TransactionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionOneofCase TransactionCase {
      get { return transactionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTransaction() {
      transactionCase_ = TransactionOneofCase.None;
      transaction_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(ConfirmedTransaction, other.ConfirmedTransaction)) return false;
      if (!object.Equals(UnconfirmedTransaction, other.UnconfirmedTransaction)) return false;
      if (SerializedTransaction != other.SerializedTransaction) return false;
      if (TransactionCase != other.TransactionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Pb.TransactionNotification.Types.Type.Unconfirmed) hash ^= Type.GetHashCode();
      if (transactionCase_ == TransactionOneofCase.ConfirmedTransaction) hash ^= ConfirmedTransaction.GetHashCode();
      if (transactionCase_ == TransactionOneofCase.UnconfirmedTransaction) hash ^= UnconfirmedTransaction.GetHashCode();
      if (transactionCase_ == TransactionOneofCase.SerializedTransaction) hash ^= SerializedTransaction.GetHashCode();
      hash ^= (int) transactionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Pb.TransactionNotification.Types.Type.Unconfirmed) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (transactionCase_ == TransactionOneofCase.ConfirmedTransaction) {
        output.WriteRawTag(18);
        output.WriteMessage(ConfirmedTransaction);
      }
      if (transactionCase_ == TransactionOneofCase.UnconfirmedTransaction) {
        output.WriteRawTag(26);
        output.WriteMessage(UnconfirmedTransaction);
      }
      if (transactionCase_ == TransactionOneofCase.SerializedTransaction) {
        output.WriteRawTag(34);
        output.WriteBytes(SerializedTransaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Pb.TransactionNotification.Types.Type.Unconfirmed) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (transactionCase_ == TransactionOneofCase.ConfirmedTransaction) {
        output.WriteRawTag(18);
        output.WriteMessage(ConfirmedTransaction);
      }
      if (transactionCase_ == TransactionOneofCase.UnconfirmedTransaction) {
        output.WriteRawTag(26);
        output.WriteMessage(UnconfirmedTransaction);
      }
      if (transactionCase_ == TransactionOneofCase.SerializedTransaction) {
        output.WriteRawTag(34);
        output.WriteBytes(SerializedTransaction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Pb.TransactionNotification.Types.Type.Unconfirmed) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (transactionCase_ == TransactionOneofCase.ConfirmedTransaction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConfirmedTransaction);
      }
      if (transactionCase_ == TransactionOneofCase.UnconfirmedTransaction) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UnconfirmedTransaction);
      }
      if (transactionCase_ == TransactionOneofCase.SerializedTransaction) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SerializedTransaction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionNotification other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Pb.TransactionNotification.Types.Type.Unconfirmed) {
        Type = other.Type;
      }
      switch (other.TransactionCase) {
        case TransactionOneofCase.ConfirmedTransaction:
          if (ConfirmedTransaction == null) {
            ConfirmedTransaction = new global::Pb.Transaction();
          }
          ConfirmedTransaction.MergeFrom(other.ConfirmedTransaction);
          break;
        case TransactionOneofCase.UnconfirmedTransaction:
          if (UnconfirmedTransaction == null) {
            UnconfirmedTransaction = new global::Pb.MempoolTransaction();
          }
          UnconfirmedTransaction.MergeFrom(other.UnconfirmedTransaction);
          break;
        case TransactionOneofCase.SerializedTransaction:
          SerializedTransaction = other.SerializedTransaction;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Pb.TransactionNotification.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Pb.Transaction subBuilder = new global::Pb.Transaction();
            if (transactionCase_ == TransactionOneofCase.ConfirmedTransaction) {
              subBuilder.MergeFrom(ConfirmedTransaction);
            }
            input.ReadMessage(subBuilder);
            ConfirmedTransaction = subBuilder;
            break;
          }
          case 26: {
            global::Pb.MempoolTransaction subBuilder = new global::Pb.MempoolTransaction();
            if (transactionCase_ == TransactionOneofCase.UnconfirmedTransaction) {
              subBuilder.MergeFrom(UnconfirmedTransaction);
            }
            input.ReadMessage(subBuilder);
            UnconfirmedTransaction = subBuilder;
            break;
          }
          case 34: {
            SerializedTransaction = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Pb.TransactionNotification.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Pb.Transaction subBuilder = new global::Pb.Transaction();
            if (transactionCase_ == TransactionOneofCase.ConfirmedTransaction) {
              subBuilder.MergeFrom(ConfirmedTransaction);
            }
            input.ReadMessage(subBuilder);
            ConfirmedTransaction = subBuilder;
            break;
          }
          case 26: {
            global::Pb.MempoolTransaction subBuilder = new global::Pb.MempoolTransaction();
            if (transactionCase_ == TransactionOneofCase.UnconfirmedTransaction) {
              subBuilder.MergeFrom(UnconfirmedTransaction);
            }
            input.ReadMessage(subBuilder);
            UnconfirmedTransaction = subBuilder;
            break;
          }
          case 34: {
            SerializedTransaction = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TransactionNotification message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// State of the transaction acceptance.
      /// </summary>
      public enum Type {
        /// <summary>
        /// A transaction in mempool.
        /// </summary>
        [pbr::OriginalName("UNCONFIRMED")] Unconfirmed = 0,
        /// <summary>
        /// A transaction in a block.
        /// </summary>
        [pbr::OriginalName("CONFIRMED")] Confirmed = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Metadata for identifying and validating a block
  /// </summary>
  public sealed partial class BlockInfo : pb::IMessage<BlockInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BlockInfo> _parser = new pb::MessageParser<BlockInfo>(() => new BlockInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockInfo(BlockInfo other) : this() {
      hash_ = other.hash_;
      height_ = other.height_;
      version_ = other.version_;
      previousBlock_ = other.previousBlock_;
      merkleRoot_ = other.merkleRoot_;
      timestamp_ = other.timestamp_;
      bits_ = other.bits_;
      nonce_ = other.nonce_;
      confirmations_ = other.confirmations_;
      difficulty_ = other.difficulty_;
      nextBlockHash_ = other.nextBlockHash_;
      size_ = other.size_;
      medianTime_ = other.medianTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockInfo Clone() {
      return new BlockInfo(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    /// <summary>
    /// The double sha256 hash of the six header fields in the first 80 bytes
    /// of the block, when encoded according the bitcoin protocol, little-endian.
    /// sha256(sha256(encoded_header))
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private int height_;
    /// <summary>
    /// The block number, an incremental index for each block mined.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private int version_;
    /// <summary>
    /// A version number to track software/protocol upgrades.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "previous_block" field.</summary>
    public const int PreviousBlockFieldNumber = 4;
    private pb::ByteString previousBlock_ = pb::ByteString.Empty;
    /// <summary>
    /// Hash of the previous block, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PreviousBlock {
      get { return previousBlock_; }
      set {
        previousBlock_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "merkle_root" field.</summary>
    public const int MerkleRootFieldNumber = 5;
    private pb::ByteString merkleRoot_ = pb::ByteString.Empty;
    /// <summary>
    /// The root of the Merkle Tree built from all transactions in the block, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString MerkleRoot {
      get { return merkleRoot_; }
      set {
        merkleRoot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 6;
    private long timestamp_;
    /// <summary>
    /// When mining of the block started, expressed in seconds since 1970-01-01.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "bits" field.</summary>
    public const int BitsFieldNumber = 7;
    private uint bits_;
    /// <summary>
    /// Difficulty in Compressed Target Format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Bits {
      get { return bits_; }
      set {
        bits_ = value;
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 8;
    private uint nonce_;
    /// <summary>
    /// A random value that was generated during block mining which happened to
    /// result in a computed block hash below the difficulty target at the time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    /// <summary>Field number for the "confirmations" field.</summary>
    public const int ConfirmationsFieldNumber = 9;
    private int confirmations_;
    /// <summary>
    /// Number of blocks in a chain, including the block itself upon creation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Confirmations {
      get { return confirmations_; }
      set {
        confirmations_ = value;
      }
    }

    /// <summary>Field number for the "difficulty" field.</summary>
    public const int DifficultyFieldNumber = 10;
    private double difficulty_;
    /// <summary>
    /// Difficulty target at time of creation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Difficulty {
      get { return difficulty_; }
      set {
        difficulty_ = value;
      }
    }

    /// <summary>Field number for the "next_block_hash" field.</summary>
    public const int NextBlockHashFieldNumber = 11;
    private pb::ByteString nextBlockHash_ = pb::ByteString.Empty;
    /// <summary>
    /// Hash of the next block in this chain, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString NextBlockHash {
      get { return nextBlockHash_; }
      set {
        nextBlockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 12;
    private int size_;
    /// <summary>
    /// Size of the block in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "median_time" field.</summary>
    public const int MedianTimeFieldNumber = 13;
    private long medianTime_;
    /// <summary>
    /// The median block time of the latest 11 block timestamps.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MedianTime {
      get { return medianTime_; }
      set {
        medianTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (Height != other.Height) return false;
      if (Version != other.Version) return false;
      if (PreviousBlock != other.PreviousBlock) return false;
      if (MerkleRoot != other.MerkleRoot) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Bits != other.Bits) return false;
      if (Nonce != other.Nonce) return false;
      if (Confirmations != other.Confirmations) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Difficulty, other.Difficulty)) return false;
      if (NextBlockHash != other.NextBlockHash) return false;
      if (Size != other.Size) return false;
      if (MedianTime != other.MedianTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (PreviousBlock.Length != 0) hash ^= PreviousBlock.GetHashCode();
      if (MerkleRoot.Length != 0) hash ^= MerkleRoot.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Bits != 0) hash ^= Bits.GetHashCode();
      if (Nonce != 0) hash ^= Nonce.GetHashCode();
      if (Confirmations != 0) hash ^= Confirmations.GetHashCode();
      if (Difficulty != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Difficulty);
      if (NextBlockHash.Length != 0) hash ^= NextBlockHash.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      if (MedianTime != 0L) hash ^= MedianTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (PreviousBlock.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(PreviousBlock);
      }
      if (MerkleRoot.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(MerkleRoot);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Timestamp);
      }
      if (Bits != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Bits);
      }
      if (Nonce != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Nonce);
      }
      if (Confirmations != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Confirmations);
      }
      if (Difficulty != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(Difficulty);
      }
      if (NextBlockHash.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(NextBlockHash);
      }
      if (Size != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Size);
      }
      if (MedianTime != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MedianTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (Height != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (PreviousBlock.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(PreviousBlock);
      }
      if (MerkleRoot.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(MerkleRoot);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Timestamp);
      }
      if (Bits != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Bits);
      }
      if (Nonce != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(Nonce);
      }
      if (Confirmations != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Confirmations);
      }
      if (Difficulty != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(Difficulty);
      }
      if (NextBlockHash.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(NextBlockHash);
      }
      if (Size != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Size);
      }
      if (MedianTime != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(MedianTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (PreviousBlock.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PreviousBlock);
      }
      if (MerkleRoot.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(MerkleRoot);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Bits != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bits);
      }
      if (Nonce != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nonce);
      }
      if (Confirmations != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Confirmations);
      }
      if (Difficulty != 0D) {
        size += 1 + 8;
      }
      if (NextBlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(NextBlockHash);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Size);
      }
      if (MedianTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MedianTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockInfo other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.PreviousBlock.Length != 0) {
        PreviousBlock = other.PreviousBlock;
      }
      if (other.MerkleRoot.Length != 0) {
        MerkleRoot = other.MerkleRoot;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Bits != 0) {
        Bits = other.Bits;
      }
      if (other.Nonce != 0) {
        Nonce = other.Nonce;
      }
      if (other.Confirmations != 0) {
        Confirmations = other.Confirmations;
      }
      if (other.Difficulty != 0D) {
        Difficulty = other.Difficulty;
      }
      if (other.NextBlockHash.Length != 0) {
        NextBlockHash = other.NextBlockHash;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      if (other.MedianTime != 0L) {
        MedianTime = other.MedianTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 34: {
            PreviousBlock = input.ReadBytes();
            break;
          }
          case 42: {
            MerkleRoot = input.ReadBytes();
            break;
          }
          case 48: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 56: {
            Bits = input.ReadUInt32();
            break;
          }
          case 64: {
            Nonce = input.ReadUInt32();
            break;
          }
          case 72: {
            Confirmations = input.ReadInt32();
            break;
          }
          case 81: {
            Difficulty = input.ReadDouble();
            break;
          }
          case 90: {
            NextBlockHash = input.ReadBytes();
            break;
          }
          case 96: {
            Size = input.ReadInt32();
            break;
          }
          case 104: {
            MedianTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 34: {
            PreviousBlock = input.ReadBytes();
            break;
          }
          case 42: {
            MerkleRoot = input.ReadBytes();
            break;
          }
          case 48: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 56: {
            Bits = input.ReadUInt32();
            break;
          }
          case 64: {
            Nonce = input.ReadUInt32();
            break;
          }
          case 72: {
            Confirmations = input.ReadInt32();
            break;
          }
          case 81: {
            Difficulty = input.ReadDouble();
            break;
          }
          case 90: {
            NextBlockHash = input.ReadBytes();
            break;
          }
          case 96: {
            Size = input.ReadInt32();
            break;
          }
          case 104: {
            MedianTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Block : pb::IMessage<Block>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Block> _parser = new pb::MessageParser<Block>(() => new Block());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Block> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block(Block other) : this() {
      info_ = other.info_ != null ? other.info_.Clone() : null;
      transactionData_ = other.transactionData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block Clone() {
      return new Block(this);
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 1;
    private global::Pb.BlockInfo info_;
    /// <summary>
    /// Block header data, as well as metadata stored by the node.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.BlockInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    /// <summary>Field number for the "transaction_data" field.</summary>
    public const int TransactionDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Pb.Block.Types.TransactionData> _repeated_transactionData_codec
        = pb::FieldCodec.ForMessage(18, global::Pb.Block.Types.TransactionData.Parser);
    private readonly pbc::RepeatedField<global::Pb.Block.Types.TransactionData> transactionData_ = new pbc::RepeatedField<global::Pb.Block.Types.TransactionData>();
    /// <summary>
    /// List of transactions or transaction hashes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pb.Block.Types.TransactionData> TransactionData {
      get { return transactionData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Block);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Block other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Info, other.Info)) return false;
      if(!transactionData_.Equals(other.transactionData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (info_ != null) hash ^= Info.GetHashCode();
      hash ^= transactionData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      transactionData_.WriteTo(output, _repeated_transactionData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (info_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Info);
      }
      transactionData_.WriteTo(ref output, _repeated_transactionData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      size += transactionData_.CalculateSize(_repeated_transactionData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Block other) {
      if (other == null) {
        return;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          Info = new global::Pb.BlockInfo();
        }
        Info.MergeFrom(other.Info);
      }
      transactionData_.Add(other.transactionData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Pb.BlockInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 18: {
            transactionData_.AddEntriesFrom(input, _repeated_transactionData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (info_ == null) {
              Info = new global::Pb.BlockInfo();
            }
            input.ReadMessage(Info);
            break;
          }
          case 18: {
            transactionData_.AddEntriesFrom(ref input, _repeated_transactionData_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Block message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class TransactionData : pb::IMessage<TransactionData>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TransactionData> _parser = new pb::MessageParser<TransactionData>(() => new TransactionData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TransactionData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pb.Block.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransactionData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransactionData(TransactionData other) : this() {
          switch (other.TxidsOrTxsCase) {
            case TxidsOrTxsOneofCase.TransactionHash:
              TransactionHash = other.TransactionHash;
              break;
            case TxidsOrTxsOneofCase.Transaction:
              Transaction = other.Transaction.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TransactionData Clone() {
          return new TransactionData(this);
        }

        /// <summary>Field number for the "transaction_hash" field.</summary>
        public const int TransactionHashFieldNumber = 1;
        /// <summary>
        /// Just the transaction hash, little-endian.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString TransactionHash {
          get { return txidsOrTxsCase_ == TxidsOrTxsOneofCase.TransactionHash ? (pb::ByteString) txidsOrTxs_ : pb::ByteString.Empty; }
          set {
            txidsOrTxs_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            txidsOrTxsCase_ = TxidsOrTxsOneofCase.TransactionHash;
          }
        }

        /// <summary>Field number for the "transaction" field.</summary>
        public const int TransactionFieldNumber = 2;
        /// <summary>
        /// A marshaled transaction.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Pb.Transaction Transaction {
          get { return txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction ? (global::Pb.Transaction) txidsOrTxs_ : null; }
          set {
            txidsOrTxs_ = value;
            txidsOrTxsCase_ = value == null ? TxidsOrTxsOneofCase.None : TxidsOrTxsOneofCase.Transaction;
          }
        }

        private object txidsOrTxs_;
        /// <summary>Enum of possible cases for the "txids_or_txs" oneof.</summary>
        public enum TxidsOrTxsOneofCase {
          None = 0,
          TransactionHash = 1,
          Transaction = 2,
        }
        private TxidsOrTxsOneofCase txidsOrTxsCase_ = TxidsOrTxsOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TxidsOrTxsOneofCase TxidsOrTxsCase {
          get { return txidsOrTxsCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearTxidsOrTxs() {
          txidsOrTxsCase_ = TxidsOrTxsOneofCase.None;
          txidsOrTxs_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TransactionData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TransactionData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TransactionHash != other.TransactionHash) return false;
          if (!object.Equals(Transaction, other.Transaction)) return false;
          if (TxidsOrTxsCase != other.TxidsOrTxsCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.TransactionHash) hash ^= TransactionHash.GetHashCode();
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) hash ^= Transaction.GetHashCode();
          hash ^= (int) txidsOrTxsCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.TransactionHash) {
            output.WriteRawTag(10);
            output.WriteBytes(TransactionHash);
          }
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) {
            output.WriteRawTag(18);
            output.WriteMessage(Transaction);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.TransactionHash) {
            output.WriteRawTag(10);
            output.WriteBytes(TransactionHash);
          }
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) {
            output.WriteRawTag(18);
            output.WriteMessage(Transaction);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.TransactionHash) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransactionHash);
          }
          if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TransactionData other) {
          if (other == null) {
            return;
          }
          switch (other.TxidsOrTxsCase) {
            case TxidsOrTxsOneofCase.TransactionHash:
              TransactionHash = other.TransactionHash;
              break;
            case TxidsOrTxsOneofCase.Transaction:
              if (Transaction == null) {
                Transaction = new global::Pb.Transaction();
              }
              Transaction.MergeFrom(other.Transaction);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TransactionHash = input.ReadBytes();
                break;
              }
              case 18: {
                global::Pb.Transaction subBuilder = new global::Pb.Transaction();
                if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) {
                  subBuilder.MergeFrom(Transaction);
                }
                input.ReadMessage(subBuilder);
                Transaction = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                TransactionHash = input.ReadBytes();
                break;
              }
              case 18: {
                global::Pb.Transaction subBuilder = new global::Pb.Transaction();
                if (txidsOrTxsCase_ == TxidsOrTxsOneofCase.Transaction) {
                  subBuilder.MergeFrom(Transaction);
                }
                input.ReadMessage(subBuilder);
                Transaction = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class Transaction : pb::IMessage<Transaction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Transaction> _parser = new pb::MessageParser<Transaction>(() => new Transaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction(Transaction other) : this() {
      hash_ = other.hash_;
      version_ = other.version_;
      inputs_ = other.inputs_.Clone();
      outputs_ = other.outputs_.Clone();
      lockTime_ = other.lockTime_;
      size_ = other.size_;
      timestamp_ = other.timestamp_;
      confirmations_ = other.confirmations_;
      blockHeight_ = other.blockHeight_;
      blockHash_ = other.blockHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction Clone() {
      return new Transaction(this);
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 1;
    private pb::ByteString hash_ = pb::ByteString.Empty;
    /// <summary>
    /// The double sha256 hash of the encoded transaction, little-endian.
    /// sha256(sha256(encoded_transaction))
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private int version_;
    /// <summary>
    /// The version of the transaction format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Pb.Transaction.Types.Input> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(26, global::Pb.Transaction.Types.Input.Parser);
    private readonly pbc::RepeatedField<global::Pb.Transaction.Types.Input> inputs_ = new pbc::RepeatedField<global::Pb.Transaction.Types.Input>();
    /// <summary>
    /// List of inputs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pb.Transaction.Types.Input> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Pb.Transaction.Types.Output> _repeated_outputs_codec
        = pb::FieldCodec.ForMessage(34, global::Pb.Transaction.Types.Output.Parser);
    private readonly pbc::RepeatedField<global::Pb.Transaction.Types.Output> outputs_ = new pbc::RepeatedField<global::Pb.Transaction.Types.Output>();
    /// <summary>
    /// List of outputs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pb.Transaction.Types.Output> Outputs {
      get { return outputs_; }
    }

    /// <summary>Field number for the "lock_time" field.</summary>
    public const int LockTimeFieldNumber = 5;
    private uint lockTime_;
    /// <summary>
    /// The block height or timestamp after which this transaction is allowed.
    /// If value is greater than 500 million, it is assumed to be an epoch timestamp,
    /// otherwise it is treated as a block-height. Default is zero, or lock.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LockTime {
      get { return lockTime_; }
      set {
        lockTime_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 8;
    private int size_;
    /// <summary>
    /// The size of the transaction in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 9;
    private long timestamp_;
    /// <summary>
    /// When the transaction was included in a block, in epoch time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "confirmations" field.</summary>
    public const int ConfirmationsFieldNumber = 10;
    private int confirmations_;
    /// <summary>
    /// Number of blocks including proof of the transaction, including
    /// the block it appeared.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Confirmations {
      get { return confirmations_; }
      set {
        confirmations_ = value;
      }
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 11;
    private int blockHeight_;
    /// <summary>
    /// Number of the block containing the transaction.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    /// <summary>Field number for the "block_hash" field.</summary>
    public const int BlockHashFieldNumber = 12;
    private pb::ByteString blockHash_ = pb::ByteString.Empty;
    /// <summary>
    /// Hash of the block the transaction was recorded in, little-endian.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BlockHash {
      get { return blockHash_; }
      set {
        blockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hash != other.Hash) return false;
      if (Version != other.Version) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      if(!outputs_.Equals(other.outputs_)) return false;
      if (LockTime != other.LockTime) return false;
      if (Size != other.Size) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Confirmations != other.Confirmations) return false;
      if (BlockHeight != other.BlockHeight) return false;
      if (BlockHash != other.BlockHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      hash ^= inputs_.GetHashCode();
      hash ^= outputs_.GetHashCode();
      if (LockTime != 0) hash ^= LockTime.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Confirmations != 0) hash ^= Confirmations.GetHashCode();
      if (BlockHeight != 0) hash ^= BlockHeight.GetHashCode();
      if (BlockHash.Length != 0) hash ^= BlockHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      outputs_.WriteTo(output, _repeated_outputs_codec);
      if (LockTime != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LockTime);
      }
      if (Size != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Size);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Timestamp);
      }
      if (Confirmations != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Confirmations);
      }
      if (BlockHeight != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(BlockHeight);
      }
      if (BlockHash.Length != 0) {
        output.WriteRawTag(98);
        output.WriteBytes(BlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Hash);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      inputs_.WriteTo(ref output, _repeated_inputs_codec);
      outputs_.WriteTo(ref output, _repeated_outputs_codec);
      if (LockTime != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LockTime);
      }
      if (Size != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Size);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Timestamp);
      }
      if (Confirmations != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Confirmations);
      }
      if (BlockHeight != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(BlockHeight);
      }
      if (BlockHash.Length != 0) {
        output.WriteRawTag(98);
        output.WriteBytes(BlockHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      size += outputs_.CalculateSize(_repeated_outputs_codec);
      if (LockTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LockTime);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Size);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Confirmations != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Confirmations);
      }
      if (BlockHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockHeight);
      }
      if (BlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BlockHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transaction other) {
      if (other == null) {
        return;
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      inputs_.Add(other.inputs_);
      outputs_.Add(other.outputs_);
      if (other.LockTime != 0) {
        LockTime = other.LockTime;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Confirmations != 0) {
        Confirmations = other.Confirmations;
      }
      if (other.BlockHeight != 0) {
        BlockHeight = other.BlockHeight;
      }
      if (other.BlockHash.Length != 0) {
        BlockHash = other.BlockHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 26: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 34: {
            outputs_.AddEntriesFrom(input, _repeated_outputs_codec);
            break;
          }
          case 40: {
            LockTime = input.ReadUInt32();
            break;
          }
          case 64: {
            Size = input.ReadInt32();
            break;
          }
          case 72: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 80: {
            Confirmations = input.ReadInt32();
            break;
          }
          case 88: {
            BlockHeight = input.ReadInt32();
            break;
          }
          case 98: {
            BlockHash = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hash = input.ReadBytes();
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 26: {
            inputs_.AddEntriesFrom(ref input, _repeated_inputs_codec);
            break;
          }
          case 34: {
            outputs_.AddEntriesFrom(ref input, _repeated_outputs_codec);
            break;
          }
          case 40: {
            LockTime = input.ReadUInt32();
            break;
          }
          case 64: {
            Size = input.ReadInt32();
            break;
          }
          case 72: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 80: {
            Confirmations = input.ReadInt32();
            break;
          }
          case 88: {
            BlockHeight = input.ReadInt32();
            break;
          }
          case 98: {
            BlockHash = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Transaction message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Input : pb::IMessage<Input>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Input> _parser = new pb::MessageParser<Input>(() => new Input());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Input> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pb.Transaction.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Input() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Input(Input other) : this() {
          index_ = other.index_;
          outpoint_ = other.outpoint_ != null ? other.outpoint_.Clone() : null;
          signatureScript_ = other.signatureScript_;
          sequence_ = other.sequence_;
          value_ = other.value_;
          previousScript_ = other.previousScript_;
          address_ = other.address_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Input Clone() {
          return new Input(this);
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 1;
        private uint index_;
        /// <summary>
        /// The number of the input, starting from zero.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        /// <summary>Field number for the "outpoint" field.</summary>
        public const int OutpointFieldNumber = 2;
        private global::Pb.Transaction.Types.Input.Types.Outpoint outpoint_;
        /// <summary>
        /// The related outpoint.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Pb.Transaction.Types.Input.Types.Outpoint Outpoint {
          get { return outpoint_; }
          set {
            outpoint_ = value;
          }
        }

        /// <summary>Field number for the "signature_script" field.</summary>
        public const int SignatureScriptFieldNumber = 3;
        private pb::ByteString signatureScript_ = pb::ByteString.Empty;
        /// <summary>
        /// An unlocking script asserting a transaction is permitted to spend
        /// the Outpoint (UTXO)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString SignatureScript {
          get { return signatureScript_; }
          set {
            signatureScript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "sequence" field.</summary>
        public const int SequenceFieldNumber = 4;
        private uint sequence_;
        /// <summary>
        /// As of BIP-68, the sequence number is interpreted as a relative
        /// lock-time for the input.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Sequence {
          get { return sequence_; }
          set {
            sequence_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 5;
        private long value_;
        /// <summary>
        /// Amount in satoshi.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        /// <summary>Field number for the "previous_script" field.</summary>
        public const int PreviousScriptFieldNumber = 6;
        private pb::ByteString previousScript_ = pb::ByteString.Empty;
        /// <summary>
        /// The pubkey_script of the previous output that is being spent.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString PreviousScript {
          get { return previousScript_; }
          set {
            previousScript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 7;
        private string address_ = "";
        /// <summary>
        /// The bitcoin addresses associated with this input.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Address {
          get { return address_; }
          set {
            address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Input);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Input other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Index != other.Index) return false;
          if (!object.Equals(Outpoint, other.Outpoint)) return false;
          if (SignatureScript != other.SignatureScript) return false;
          if (Sequence != other.Sequence) return false;
          if (Value != other.Value) return false;
          if (PreviousScript != other.PreviousScript) return false;
          if (Address != other.Address) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Index != 0) hash ^= Index.GetHashCode();
          if (outpoint_ != null) hash ^= Outpoint.GetHashCode();
          if (SignatureScript.Length != 0) hash ^= SignatureScript.GetHashCode();
          if (Sequence != 0) hash ^= Sequence.GetHashCode();
          if (Value != 0L) hash ^= Value.GetHashCode();
          if (PreviousScript.Length != 0) hash ^= PreviousScript.GetHashCode();
          if (Address.Length != 0) hash ^= Address.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Index != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Index);
          }
          if (outpoint_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Outpoint);
          }
          if (SignatureScript.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(SignatureScript);
          }
          if (Sequence != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Sequence);
          }
          if (Value != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(Value);
          }
          if (PreviousScript.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(PreviousScript);
          }
          if (Address.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Address);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Index != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Index);
          }
          if (outpoint_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Outpoint);
          }
          if (SignatureScript.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(SignatureScript);
          }
          if (Sequence != 0) {
            output.WriteRawTag(32);
            output.WriteUInt32(Sequence);
          }
          if (Value != 0L) {
            output.WriteRawTag(40);
            output.WriteInt64(Value);
          }
          if (PreviousScript.Length != 0) {
            output.WriteRawTag(50);
            output.WriteBytes(PreviousScript);
          }
          if (Address.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Address);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Index != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
          }
          if (outpoint_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Outpoint);
          }
          if (SignatureScript.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(SignatureScript);
          }
          if (Sequence != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Sequence);
          }
          if (Value != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
          }
          if (PreviousScript.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(PreviousScript);
          }
          if (Address.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Input other) {
          if (other == null) {
            return;
          }
          if (other.Index != 0) {
            Index = other.Index;
          }
          if (other.outpoint_ != null) {
            if (outpoint_ == null) {
              Outpoint = new global::Pb.Transaction.Types.Input.Types.Outpoint();
            }
            Outpoint.MergeFrom(other.Outpoint);
          }
          if (other.SignatureScript.Length != 0) {
            SignatureScript = other.SignatureScript;
          }
          if (other.Sequence != 0) {
            Sequence = other.Sequence;
          }
          if (other.Value != 0L) {
            Value = other.Value;
          }
          if (other.PreviousScript.Length != 0) {
            PreviousScript = other.PreviousScript;
          }
          if (other.Address.Length != 0) {
            Address = other.Address;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Index = input.ReadUInt32();
                break;
              }
              case 18: {
                if (outpoint_ == null) {
                  Outpoint = new global::Pb.Transaction.Types.Input.Types.Outpoint();
                }
                input.ReadMessage(Outpoint);
                break;
              }
              case 26: {
                SignatureScript = input.ReadBytes();
                break;
              }
              case 32: {
                Sequence = input.ReadUInt32();
                break;
              }
              case 40: {
                Value = input.ReadInt64();
                break;
              }
              case 50: {
                PreviousScript = input.ReadBytes();
                break;
              }
              case 58: {
                Address = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Index = input.ReadUInt32();
                break;
              }
              case 18: {
                if (outpoint_ == null) {
                  Outpoint = new global::Pb.Transaction.Types.Input.Types.Outpoint();
                }
                input.ReadMessage(Outpoint);
                break;
              }
              case 26: {
                SignatureScript = input.ReadBytes();
                break;
              }
              case 32: {
                Sequence = input.ReadUInt32();
                break;
              }
              case 40: {
                Value = input.ReadInt64();
                break;
              }
              case 50: {
                PreviousScript = input.ReadBytes();
                break;
              }
              case 58: {
                Address = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Input message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Outpoint : pb::IMessage<Outpoint>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Outpoint> _parser = new pb::MessageParser<Outpoint>(() => new Outpoint());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Outpoint> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Pb.Transaction.Types.Input.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Outpoint() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Outpoint(Outpoint other) : this() {
              hash_ = other.hash_;
              index_ = other.index_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Outpoint Clone() {
              return new Outpoint(this);
            }

            /// <summary>Field number for the "hash" field.</summary>
            public const int HashFieldNumber = 1;
            private pb::ByteString hash_ = pb::ByteString.Empty;
            /// <summary>
            /// The hash of the transaction containing the output to be spent, little-endian
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Hash {
              get { return hash_; }
              set {
                hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "index" field.</summary>
            public const int IndexFieldNumber = 2;
            private uint index_;
            /// <summary>
            /// The index of specific output on the transaction.
            /// </summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public uint Index {
              get { return index_; }
              set {
                index_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Outpoint);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Outpoint other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Hash != other.Hash) return false;
              if (Index != other.Index) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Hash.Length != 0) hash ^= Hash.GetHashCode();
              if (Index != 0) hash ^= Index.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Hash.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(Hash);
              }
              if (Index != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(Index);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Hash.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(Hash);
              }
              if (Index != 0) {
                output.WriteRawTag(16);
                output.WriteUInt32(Index);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Hash.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
              }
              if (Index != 0) {
                size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Outpoint other) {
              if (other == null) {
                return;
              }
              if (other.Hash.Length != 0) {
                Hash = other.Hash;
              }
              if (other.Index != 0) {
                Index = other.Index;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Hash = input.ReadBytes();
                    break;
                  }
                  case 16: {
                    Index = input.ReadUInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Hash = input.ReadBytes();
                    break;
                  }
                  case 16: {
                    Index = input.ReadUInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      public sealed partial class Output : pb::IMessage<Output>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Output> _parser = new pb::MessageParser<Output>(() => new Output());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Output> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Pb.Transaction.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Output() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Output(Output other) : this() {
          index_ = other.index_;
          value_ = other.value_;
          pubkeyScript_ = other.pubkeyScript_;
          address_ = other.address_;
          scriptClass_ = other.scriptClass_;
          disassembledScript_ = other.disassembledScript_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Output Clone() {
          return new Output(this);
        }

        /// <summary>Field number for the "index" field.</summary>
        public const int IndexFieldNumber = 1;
        private uint index_;
        /// <summary>
        /// The number of the output, starting from zero.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public uint Index {
          get { return index_; }
          set {
            index_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private long value_;
        /// <summary>
        /// The number of satoshis to be transferred.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        /// <summary>Field number for the "pubkey_script" field.</summary>
        public const int PubkeyScriptFieldNumber = 3;
        private pb::ByteString pubkeyScript_ = pb::ByteString.Empty;
        /// <summary>
        /// The public key script used to pay coins.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString PubkeyScript {
          get { return pubkeyScript_; }
          set {
            pubkeyScript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 4;
        private string address_ = "";
        /// <summary>
        /// The bitcoin addresses associated with this output.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Address {
          get { return address_; }
          set {
            address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "script_class" field.</summary>
        public const int ScriptClassFieldNumber = 5;
        private string scriptClass_ = "";
        /// <summary>
        /// The type of script.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ScriptClass {
          get { return scriptClass_; }
          set {
            scriptClass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "disassembled_script" field.</summary>
        public const int DisassembledScriptFieldNumber = 6;
        private string disassembledScript_ = "";
        /// <summary>
        /// The script expressed in Bitcoin Cash Script.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string DisassembledScript {
          get { return disassembledScript_; }
          set {
            disassembledScript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Output);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Output other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Index != other.Index) return false;
          if (Value != other.Value) return false;
          if (PubkeyScript != other.PubkeyScript) return false;
          if (Address != other.Address) return false;
          if (ScriptClass != other.ScriptClass) return false;
          if (DisassembledScript != other.DisassembledScript) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Index != 0) hash ^= Index.GetHashCode();
          if (Value != 0L) hash ^= Value.GetHashCode();
          if (PubkeyScript.Length != 0) hash ^= PubkeyScript.GetHashCode();
          if (Address.Length != 0) hash ^= Address.GetHashCode();
          if (ScriptClass.Length != 0) hash ^= ScriptClass.GetHashCode();
          if (DisassembledScript.Length != 0) hash ^= DisassembledScript.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Index != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Index);
          }
          if (Value != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Value);
          }
          if (PubkeyScript.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(PubkeyScript);
          }
          if (Address.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Address);
          }
          if (ScriptClass.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ScriptClass);
          }
          if (DisassembledScript.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DisassembledScript);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Index != 0) {
            output.WriteRawTag(8);
            output.WriteUInt32(Index);
          }
          if (Value != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Value);
          }
          if (PubkeyScript.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(PubkeyScript);
          }
          if (Address.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(Address);
          }
          if (ScriptClass.Length != 0) {
            output.WriteRawTag(42);
            output.WriteString(ScriptClass);
          }
          if (DisassembledScript.Length != 0) {
            output.WriteRawTag(50);
            output.WriteString(DisassembledScript);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Index != 0) {
            size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Index);
          }
          if (Value != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
          }
          if (PubkeyScript.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(PubkeyScript);
          }
          if (Address.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
          }
          if (ScriptClass.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ScriptClass);
          }
          if (DisassembledScript.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(DisassembledScript);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Output other) {
          if (other == null) {
            return;
          }
          if (other.Index != 0) {
            Index = other.Index;
          }
          if (other.Value != 0L) {
            Value = other.Value;
          }
          if (other.PubkeyScript.Length != 0) {
            PubkeyScript = other.PubkeyScript;
          }
          if (other.Address.Length != 0) {
            Address = other.Address;
          }
          if (other.ScriptClass.Length != 0) {
            ScriptClass = other.ScriptClass;
          }
          if (other.DisassembledScript.Length != 0) {
            DisassembledScript = other.DisassembledScript;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Index = input.ReadUInt32();
                break;
              }
              case 16: {
                Value = input.ReadInt64();
                break;
              }
              case 26: {
                PubkeyScript = input.ReadBytes();
                break;
              }
              case 34: {
                Address = input.ReadString();
                break;
              }
              case 42: {
                ScriptClass = input.ReadString();
                break;
              }
              case 50: {
                DisassembledScript = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Index = input.ReadUInt32();
                break;
              }
              case 16: {
                Value = input.ReadInt64();
                break;
              }
              case 26: {
                PubkeyScript = input.ReadBytes();
                break;
              }
              case 34: {
                Address = input.ReadString();
                break;
              }
              case 42: {
                ScriptClass = input.ReadString();
                break;
              }
              case 50: {
                DisassembledScript = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class MempoolTransaction : pb::IMessage<MempoolTransaction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MempoolTransaction> _parser = new pb::MessageParser<MempoolTransaction>(() => new MempoolTransaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MempoolTransaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolTransaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolTransaction(MempoolTransaction other) : this() {
      transaction_ = other.transaction_ != null ? other.transaction_.Clone() : null;
      addedTime_ = other.addedTime_;
      addedHeight_ = other.addedHeight_;
      fee_ = other.fee_;
      feePerKb_ = other.feePerKb_;
      startingPriority_ = other.startingPriority_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MempoolTransaction Clone() {
      return new MempoolTransaction(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Pb.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "added_time" field.</summary>
    public const int AddedTimeFieldNumber = 2;
    private long addedTime_;
    /// <summary>
    /// The time when the transaction was added too the pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AddedTime {
      get { return addedTime_; }
      set {
        addedTime_ = value;
      }
    }

    /// <summary>Field number for the "added_height" field.</summary>
    public const int AddedHeightFieldNumber = 3;
    private int addedHeight_;
    /// <summary>
    /// The block height when the transaction was added to the pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AddedHeight {
      get { return addedHeight_; }
      set {
        addedHeight_ = value;
      }
    }

    /// <summary>Field number for the "fee" field.</summary>
    public const int FeeFieldNumber = 4;
    private long fee_;
    /// <summary>
    /// The total fee in satoshi the transaction pays.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Fee {
      get { return fee_; }
      set {
        fee_ = value;
      }
    }

    /// <summary>Field number for the "fee_per_kb" field.</summary>
    public const int FeePerKbFieldNumber = 5;
    private long feePerKb_;
    /// <summary>
    /// The fee in satoshi per kilobyte the transaction pays.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FeePerKb {
      get { return feePerKb_; }
      set {
        feePerKb_ = value;
      }
    }

    /// <summary>Field number for the "starting_priority" field.</summary>
    public const int StartingPriorityFieldNumber = 6;
    private double startingPriority_;
    /// <summary>
    /// The priority of the transaction when it was added to the pool.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double StartingPriority {
      get { return startingPriority_; }
      set {
        startingPriority_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MempoolTransaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MempoolTransaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (AddedTime != other.AddedTime) return false;
      if (AddedHeight != other.AddedHeight) return false;
      if (Fee != other.Fee) return false;
      if (FeePerKb != other.FeePerKb) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(StartingPriority, other.StartingPriority)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (AddedTime != 0L) hash ^= AddedTime.GetHashCode();
      if (AddedHeight != 0) hash ^= AddedHeight.GetHashCode();
      if (Fee != 0L) hash ^= Fee.GetHashCode();
      if (FeePerKb != 0L) hash ^= FeePerKb.GetHashCode();
      if (StartingPriority != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(StartingPriority);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (AddedTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AddedTime);
      }
      if (AddedHeight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AddedHeight);
      }
      if (Fee != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Fee);
      }
      if (FeePerKb != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FeePerKb);
      }
      if (StartingPriority != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(StartingPriority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (AddedTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(AddedTime);
      }
      if (AddedHeight != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AddedHeight);
      }
      if (Fee != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Fee);
      }
      if (FeePerKb != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(FeePerKb);
      }
      if (StartingPriority != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(StartingPriority);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (AddedTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AddedTime);
      }
      if (AddedHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AddedHeight);
      }
      if (Fee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fee);
      }
      if (FeePerKb != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(FeePerKb);
      }
      if (StartingPriority != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MempoolTransaction other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          Transaction = new global::Pb.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.AddedTime != 0L) {
        AddedTime = other.AddedTime;
      }
      if (other.AddedHeight != 0) {
        AddedHeight = other.AddedHeight;
      }
      if (other.Fee != 0L) {
        Fee = other.Fee;
      }
      if (other.FeePerKb != 0L) {
        FeePerKb = other.FeePerKb;
      }
      if (other.StartingPriority != 0D) {
        StartingPriority = other.StartingPriority;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Pb.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 16: {
            AddedTime = input.ReadInt64();
            break;
          }
          case 24: {
            AddedHeight = input.ReadInt32();
            break;
          }
          case 32: {
            Fee = input.ReadInt64();
            break;
          }
          case 40: {
            FeePerKb = input.ReadInt64();
            break;
          }
          case 49: {
            StartingPriority = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (transaction_ == null) {
              Transaction = new global::Pb.Transaction();
            }
            input.ReadMessage(Transaction);
            break;
          }
          case 16: {
            AddedTime = input.ReadInt64();
            break;
          }
          case 24: {
            AddedHeight = input.ReadInt32();
            break;
          }
          case 32: {
            Fee = input.ReadInt64();
            break;
          }
          case 40: {
            FeePerKb = input.ReadInt64();
            break;
          }
          case 49: {
            StartingPriority = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnspentOutput : pb::IMessage<UnspentOutput>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnspentOutput> _parser = new pb::MessageParser<UnspentOutput>(() => new UnspentOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnspentOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnspentOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnspentOutput(UnspentOutput other) : this() {
      outpoint_ = other.outpoint_ != null ? other.outpoint_.Clone() : null;
      pubkeyScript_ = other.pubkeyScript_;
      value_ = other.value_;
      isCoinbase_ = other.isCoinbase_;
      blockHeight_ = other.blockHeight_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnspentOutput Clone() {
      return new UnspentOutput(this);
    }

    /// <summary>Field number for the "outpoint" field.</summary>
    public const int OutpointFieldNumber = 1;
    private global::Pb.Transaction.Types.Input.Types.Outpoint outpoint_;
    /// <summary>
    /// A reference to the output given by transaction hash and index.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Pb.Transaction.Types.Input.Types.Outpoint Outpoint {
      get { return outpoint_; }
      set {
        outpoint_ = value;
      }
    }

    /// <summary>Field number for the "pubkey_script" field.</summary>
    public const int PubkeyScriptFieldNumber = 2;
    private pb::ByteString pubkeyScript_ = pb::ByteString.Empty;
    /// <summary>
    /// The public key script used to pay coins.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PubkeyScript {
      get { return pubkeyScript_; }
      set {
        pubkeyScript_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private long value_;
    /// <summary>
    /// The amount in satoshis
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "is_coinbase" field.</summary>
    public const int IsCoinbaseFieldNumber = 4;
    private bool isCoinbase_;
    /// <summary>
    /// When is_coinbase is true, the output is the first in the block,
    /// a generation transaction, the result of mining.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCoinbase {
      get { return isCoinbase_; }
      set {
        isCoinbase_ = value;
      }
    }

    /// <summary>Field number for the "block_height" field.</summary>
    public const int BlockHeightFieldNumber = 5;
    private int blockHeight_;
    /// <summary>
    /// The block number containing the UXTO.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlockHeight {
      get { return blockHeight_; }
      set {
        blockHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnspentOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnspentOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Outpoint, other.Outpoint)) return false;
      if (PubkeyScript != other.PubkeyScript) return false;
      if (Value != other.Value) return false;
      if (IsCoinbase != other.IsCoinbase) return false;
      if (BlockHeight != other.BlockHeight) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (outpoint_ != null) hash ^= Outpoint.GetHashCode();
      if (PubkeyScript.Length != 0) hash ^= PubkeyScript.GetHashCode();
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (IsCoinbase != false) hash ^= IsCoinbase.GetHashCode();
      if (BlockHeight != 0) hash ^= BlockHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (outpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Outpoint);
      }
      if (PubkeyScript.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PubkeyScript);
      }
      if (Value != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Value);
      }
      if (IsCoinbase != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsCoinbase);
      }
      if (BlockHeight != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (outpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Outpoint);
      }
      if (PubkeyScript.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PubkeyScript);
      }
      if (Value != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Value);
      }
      if (IsCoinbase != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsCoinbase);
      }
      if (BlockHeight != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BlockHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (outpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Outpoint);
      }
      if (PubkeyScript.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PubkeyScript);
      }
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (IsCoinbase != false) {
        size += 1 + 1;
      }
      if (BlockHeight != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlockHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnspentOutput other) {
      if (other == null) {
        return;
      }
      if (other.outpoint_ != null) {
        if (outpoint_ == null) {
          Outpoint = new global::Pb.Transaction.Types.Input.Types.Outpoint();
        }
        Outpoint.MergeFrom(other.Outpoint);
      }
      if (other.PubkeyScript.Length != 0) {
        PubkeyScript = other.PubkeyScript;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      if (other.IsCoinbase != false) {
        IsCoinbase = other.IsCoinbase;
      }
      if (other.BlockHeight != 0) {
        BlockHeight = other.BlockHeight;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (outpoint_ == null) {
              Outpoint = new global::Pb.Transaction.Types.Input.Types.Outpoint();
            }
            input.ReadMessage(Outpoint);
            break;
          }
          case 18: {
            PubkeyScript = input.ReadBytes();
            break;
          }
          case 24: {
            Value = input.ReadInt64();
            break;
          }
          case 32: {
            IsCoinbase = input.ReadBool();
            break;
          }
          case 40: {
            BlockHeight = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (outpoint_ == null) {
              Outpoint = new global::Pb.Transaction.Types.Input.Types.Outpoint();
            }
            input.ReadMessage(Outpoint);
            break;
          }
          case 18: {
            PubkeyScript = input.ReadBytes();
            break;
          }
          case 24: {
            Value = input.ReadInt64();
            break;
          }
          case 32: {
            IsCoinbase = input.ReadBool();
            break;
          }
          case 40: {
            BlockHeight = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TransactionFilter : pb::IMessage<TransactionFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TransactionFilter> _parser = new pb::MessageParser<TransactionFilter>(() => new TransactionFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Pb.BchrpcReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionFilter(TransactionFilter other) : this() {
      addresses_ = other.addresses_.Clone();
      outpoints_ = other.outpoints_.Clone();
      dataElements_ = other.dataElements_.Clone();
      allTransactions_ = other.allTransactions_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionFilter Clone() {
      return new TransactionFilter(this);
    }

    /// <summary>Field number for the "addresses" field.</summary>
    public const int AddressesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_addresses_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> addresses_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Filter by address(es)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Addresses {
      get { return addresses_; }
    }

    /// <summary>Field number for the "outpoints" field.</summary>
    public const int OutpointsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Pb.Transaction.Types.Input.Types.Outpoint> _repeated_outpoints_codec
        = pb::FieldCodec.ForMessage(18, global::Pb.Transaction.Types.Input.Types.Outpoint.Parser);
    private readonly pbc::RepeatedField<global::Pb.Transaction.Types.Input.Types.Outpoint> outpoints_ = new pbc::RepeatedField<global::Pb.Transaction.Types.Input.Types.Outpoint>();
    /// <summary>
    /// Filter by output hash and index.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Pb.Transaction.Types.Input.Types.Outpoint> Outpoints {
      get { return outpoints_; }
    }

    /// <summary>Field number for the "data_elements" field.</summary>
    public const int DataElementsFieldNumber = 3;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_dataElements_codec
        = pb::FieldCodec.ForBytes(26);
    private readonly pbc::RepeatedField<pb::ByteString> dataElements_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// Filter by data elements contained in pubkey scripts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> DataElements {
      get { return dataElements_; }
    }

    /// <summary>Field number for the "all_transactions" field.</summary>
    public const int AllTransactionsFieldNumber = 4;
    private bool allTransactions_;
    /// <summary>
    /// Subscribe/Unsubscribe to everything. Other filters
    /// will be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllTransactions {
      get { return allTransactions_; }
      set {
        allTransactions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!addresses_.Equals(other.addresses_)) return false;
      if(!outpoints_.Equals(other.outpoints_)) return false;
      if(!dataElements_.Equals(other.dataElements_)) return false;
      if (AllTransactions != other.AllTransactions) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= addresses_.GetHashCode();
      hash ^= outpoints_.GetHashCode();
      hash ^= dataElements_.GetHashCode();
      if (AllTransactions != false) hash ^= AllTransactions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      addresses_.WriteTo(output, _repeated_addresses_codec);
      outpoints_.WriteTo(output, _repeated_outpoints_codec);
      dataElements_.WriteTo(output, _repeated_dataElements_codec);
      if (AllTransactions != false) {
        output.WriteRawTag(32);
        output.WriteBool(AllTransactions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      addresses_.WriteTo(ref output, _repeated_addresses_codec);
      outpoints_.WriteTo(ref output, _repeated_outpoints_codec);
      dataElements_.WriteTo(ref output, _repeated_dataElements_codec);
      if (AllTransactions != false) {
        output.WriteRawTag(32);
        output.WriteBool(AllTransactions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += addresses_.CalculateSize(_repeated_addresses_codec);
      size += outpoints_.CalculateSize(_repeated_outpoints_codec);
      size += dataElements_.CalculateSize(_repeated_dataElements_codec);
      if (AllTransactions != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionFilter other) {
      if (other == null) {
        return;
      }
      addresses_.Add(other.addresses_);
      outpoints_.Add(other.outpoints_);
      dataElements_.Add(other.dataElements_);
      if (other.AllTransactions != false) {
        AllTransactions = other.AllTransactions;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            addresses_.AddEntriesFrom(input, _repeated_addresses_codec);
            break;
          }
          case 18: {
            outpoints_.AddEntriesFrom(input, _repeated_outpoints_codec);
            break;
          }
          case 26: {
            dataElements_.AddEntriesFrom(input, _repeated_dataElements_codec);
            break;
          }
          case 32: {
            AllTransactions = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            addresses_.AddEntriesFrom(ref input, _repeated_addresses_codec);
            break;
          }
          case 18: {
            outpoints_.AddEntriesFrom(ref input, _repeated_outpoints_codec);
            break;
          }
          case 26: {
            dataElements_.AddEntriesFrom(ref input, _repeated_dataElements_codec);
            break;
          }
          case 32: {
            AllTransactions = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
