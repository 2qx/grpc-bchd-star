<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bchrpc.proto

namespace Pb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>pb.SubscribeTransactionsRequest</code>
 */
class SubscribeTransactionsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.pb.TransactionFilter subscribe = 1;</code>
     */
    protected $subscribe = null;
    /**
     * Generated from protobuf field <code>.pb.TransactionFilter unsubscribe = 2;</code>
     */
    protected $unsubscribe = null;
    /**
     * When include_mempool is true, new transactions coming in from the mempool are
     * included apart from the ones confirmed in a block.
     *
     * Generated from protobuf field <code>bool include_mempool = 3;</code>
     */
    protected $include_mempool = false;
    /**
     * When include_in_block is true, transactions are included when they are confirmed.
     * This notification is sent in addition to any requested mempool notifications.
     *
     * Generated from protobuf field <code>bool include_in_block = 4;</code>
     */
    protected $include_in_block = false;
    /**
     * When serialize_tx is true, transactions are serialized using bitcoin protocol encoding. 
     * Default is false, transaction will be Marshaled (see `Transaction`, `MempoolTransaction` and `TransactionNotification`)
     *
     * Generated from protobuf field <code>bool serialize_tx = 5;</code>
     */
    protected $serialize_tx = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Pb\TransactionFilter $subscribe
     *     @type \Pb\TransactionFilter $unsubscribe
     *     @type bool $include_mempool
     *           When include_mempool is true, new transactions coming in from the mempool are
     *           included apart from the ones confirmed in a block.
     *     @type bool $include_in_block
     *           When include_in_block is true, transactions are included when they are confirmed.
     *           This notification is sent in addition to any requested mempool notifications.
     *     @type bool $serialize_tx
     *           When serialize_tx is true, transactions are serialized using bitcoin protocol encoding. 
     *           Default is false, transaction will be Marshaled (see `Transaction`, `MempoolTransaction` and `TransactionNotification`)
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Bchrpc::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.pb.TransactionFilter subscribe = 1;</code>
     * @return \Pb\TransactionFilter
     */
    public function getSubscribe()
    {
        return $this->subscribe;
    }

    /**
     * Generated from protobuf field <code>.pb.TransactionFilter subscribe = 1;</code>
     * @param \Pb\TransactionFilter $var
     * @return $this
     */
    public function setSubscribe($var)
    {
        GPBUtil::checkMessage($var, \Pb\TransactionFilter::class);
        $this->subscribe = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.pb.TransactionFilter unsubscribe = 2;</code>
     * @return \Pb\TransactionFilter
     */
    public function getUnsubscribe()
    {
        return $this->unsubscribe;
    }

    /**
     * Generated from protobuf field <code>.pb.TransactionFilter unsubscribe = 2;</code>
     * @param \Pb\TransactionFilter $var
     * @return $this
     */
    public function setUnsubscribe($var)
    {
        GPBUtil::checkMessage($var, \Pb\TransactionFilter::class);
        $this->unsubscribe = $var;

        return $this;
    }

    /**
     * When include_mempool is true, new transactions coming in from the mempool are
     * included apart from the ones confirmed in a block.
     *
     * Generated from protobuf field <code>bool include_mempool = 3;</code>
     * @return bool
     */
    public function getIncludeMempool()
    {
        return $this->include_mempool;
    }

    /**
     * When include_mempool is true, new transactions coming in from the mempool are
     * included apart from the ones confirmed in a block.
     *
     * Generated from protobuf field <code>bool include_mempool = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setIncludeMempool($var)
    {
        GPBUtil::checkBool($var);
        $this->include_mempool = $var;

        return $this;
    }

    /**
     * When include_in_block is true, transactions are included when they are confirmed.
     * This notification is sent in addition to any requested mempool notifications.
     *
     * Generated from protobuf field <code>bool include_in_block = 4;</code>
     * @return bool
     */
    public function getIncludeInBlock()
    {
        return $this->include_in_block;
    }

    /**
     * When include_in_block is true, transactions are included when they are confirmed.
     * This notification is sent in addition to any requested mempool notifications.
     *
     * Generated from protobuf field <code>bool include_in_block = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setIncludeInBlock($var)
    {
        GPBUtil::checkBool($var);
        $this->include_in_block = $var;

        return $this;
    }

    /**
     * When serialize_tx is true, transactions are serialized using bitcoin protocol encoding. 
     * Default is false, transaction will be Marshaled (see `Transaction`, `MempoolTransaction` and `TransactionNotification`)
     *
     * Generated from protobuf field <code>bool serialize_tx = 5;</code>
     * @return bool
     */
    public function getSerializeTx()
    {
        return $this->serialize_tx;
    }

    /**
     * When serialize_tx is true, transactions are serialized using bitcoin protocol encoding. 
     * Default is false, transaction will be Marshaled (see `Transaction`, `MempoolTransaction` and `TransactionNotification`)
     *
     * Generated from protobuf field <code>bool serialize_tx = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setSerializeTx($var)
    {
        GPBUtil::checkBool($var);
        $this->serialize_tx = $var;

        return $this;
    }

}

