<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: bchrpc.proto

namespace Pb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>pb.MempoolTransaction</code>
 */
class MempoolTransaction extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.pb.Transaction transaction = 1;</code>
     */
    protected $transaction = null;
    /**
     * The time when the transaction was added too the pool.
     *
     * Generated from protobuf field <code>int64 added_time = 2;</code>
     */
    protected $added_time = 0;
    /**
     * The block height when the transaction was added to the pool.
     *
     * Generated from protobuf field <code>int32 added_height = 3;</code>
     */
    protected $added_height = 0;
    /**
     * The total fee in satoshi the transaction pays.
     *
     * Generated from protobuf field <code>int64 fee = 4;</code>
     */
    protected $fee = 0;
    /**
     * The fee in satoshi per kilobyte the transaction pays.
     *
     * Generated from protobuf field <code>int64 fee_per_kb = 5;</code>
     */
    protected $fee_per_kb = 0;
    /**
     * The priority of the transaction when it was added to the pool.
     *
     * Generated from protobuf field <code>double starting_priority = 6;</code>
     */
    protected $starting_priority = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Pb\Transaction $transaction
     *     @type int|string $added_time
     *           The time when the transaction was added too the pool.
     *     @type int $added_height
     *           The block height when the transaction was added to the pool.
     *     @type int|string $fee
     *           The total fee in satoshi the transaction pays.
     *     @type int|string $fee_per_kb
     *           The fee in satoshi per kilobyte the transaction pays.
     *     @type float $starting_priority
     *           The priority of the transaction when it was added to the pool.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Bchrpc::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.pb.Transaction transaction = 1;</code>
     * @return \Pb\Transaction
     */
    public function getTransaction()
    {
        return $this->transaction;
    }

    /**
     * Generated from protobuf field <code>.pb.Transaction transaction = 1;</code>
     * @param \Pb\Transaction $var
     * @return $this
     */
    public function setTransaction($var)
    {
        GPBUtil::checkMessage($var, \Pb\Transaction::class);
        $this->transaction = $var;

        return $this;
    }

    /**
     * The time when the transaction was added too the pool.
     *
     * Generated from protobuf field <code>int64 added_time = 2;</code>
     * @return int|string
     */
    public function getAddedTime()
    {
        return $this->added_time;
    }

    /**
     * The time when the transaction was added too the pool.
     *
     * Generated from protobuf field <code>int64 added_time = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setAddedTime($var)
    {
        GPBUtil::checkInt64($var);
        $this->added_time = $var;

        return $this;
    }

    /**
     * The block height when the transaction was added to the pool.
     *
     * Generated from protobuf field <code>int32 added_height = 3;</code>
     * @return int
     */
    public function getAddedHeight()
    {
        return $this->added_height;
    }

    /**
     * The block height when the transaction was added to the pool.
     *
     * Generated from protobuf field <code>int32 added_height = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setAddedHeight($var)
    {
        GPBUtil::checkInt32($var);
        $this->added_height = $var;

        return $this;
    }

    /**
     * The total fee in satoshi the transaction pays.
     *
     * Generated from protobuf field <code>int64 fee = 4;</code>
     * @return int|string
     */
    public function getFee()
    {
        return $this->fee;
    }

    /**
     * The total fee in satoshi the transaction pays.
     *
     * Generated from protobuf field <code>int64 fee = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setFee($var)
    {
        GPBUtil::checkInt64($var);
        $this->fee = $var;

        return $this;
    }

    /**
     * The fee in satoshi per kilobyte the transaction pays.
     *
     * Generated from protobuf field <code>int64 fee_per_kb = 5;</code>
     * @return int|string
     */
    public function getFeePerKb()
    {
        return $this->fee_per_kb;
    }

    /**
     * The fee in satoshi per kilobyte the transaction pays.
     *
     * Generated from protobuf field <code>int64 fee_per_kb = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setFeePerKb($var)
    {
        GPBUtil::checkInt64($var);
        $this->fee_per_kb = $var;

        return $this;
    }

    /**
     * The priority of the transaction when it was added to the pool.
     *
     * Generated from protobuf field <code>double starting_priority = 6;</code>
     * @return float
     */
    public function getStartingPriority()
    {
        return $this->starting_priority;
    }

    /**
     * The priority of the transaction when it was added to the pool.
     *
     * Generated from protobuf field <code>double starting_priority = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setStartingPriority($var)
    {
        GPBUtil::checkDouble($var);
        $this->starting_priority = $var;

        return $this;
    }

}

